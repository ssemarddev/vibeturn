{"version":3,"file":"update-artist-page-ad1dc7e9.js","sources":["../../../resources/client/web-player/backstage/images/light-bg.svg","../../../resources/client/web-player/backstage/images/dark-bg.svg","../../../resources/client/web-player/backstage/backstage-layout.tsx","../../../common/foundation/resources/client/datatable/requests/paginated-resources.ts","../../../common/foundation/resources/client/ui/library/icons/material/DocumentScanner.tsx","../../../common/foundation/resources/client/ui/normalized-model/use-normalized-models.ts","../../../common/foundation/resources/client/ui/normalized-model/use-normalized-model.ts","../../../common/foundation/resources/client/ui/normalized-model/normalized-model-field.tsx","../../../resources/client/web-player/backstage/requests/use-backstage-request.ts","../../../resources/client/admin/tracks-datatable-page/requests/use-create-track.ts","../../../resources/client/admin/albums-datatable-page/requests/use-create-album.ts","../../../resources/client/admin/tracks-datatable-page/requests/use-extract-track-file-metadata.ts","../../../resources/client/web-player/backstage/upload-page/use-track-uploader.ts","../../../common/foundation/resources/client/ui/library/forms/input-field/chip-field/string-to-chip-value.ts","../../../common/foundation/resources/client/ui/library/forms/input-field/chip-field/chip-field.tsx","../../../common/foundation/resources/client/ui/library/forms/input-field/chip-field/form-chip-field.tsx","../../../resources/client/web-player/artists/artist-picker/use-artist-picker-suggestions.ts","../../../resources/client/web-player/artists/artist-picker/form-artist-picker.tsx","../../../common/foundation/resources/client/tags/form-normalized-model-chip-field.tsx","../../../common/foundation/resources/client/tags/tag.ts","../../../common/foundation/resources/client/ui/library/forms/input-field/date/date-picker/use-date-picker-state.ts","../../../common/foundation/resources/client/ui/library/forms/input-field/date/date-picker/date-picker.tsx","../../../common/foundation/resources/client/ui/library/icons/material/FileUpload.tsx","../../../common/foundation/resources/client/ui/library/icons/material/DragHandle.tsx","../../../resources/client/admin/tracks-datatable-page/track-form/track-upload-status-text.tsx","../../../resources/client/admin/tracks-datatable-page/requests/use-update-track.ts","../../../resources/client/admin/tracks-datatable-page/crupdate/use-update-track-form.ts","../../../resources/client/admin/tracks-datatable-page/track-form/track-upload-progress.tsx","../../../resources/client/web-player/backstage/upload-page/use-track-upload.ts","../../../resources/client/admin/tracks-datatable-page/track-form/track-form-upload-button.tsx","../../../resources/client/admin/tracks-datatable-page/track-form/track-form.tsx","../../../resources/client/admin/tracks-datatable-page/track-form/update-track-dialog.tsx","../../../resources/client/admin/tracks-datatable-page/music.svg","../../../resources/client/admin/tracks-datatable-page/crupdate/use-create-track-form.ts","../../../resources/client/admin/tracks-datatable-page/track-form/create-track-dialog.tsx","../../../resources/client/admin/albums-datatable-page/album-form/album-tracks-form.tsx","../../../resources/client/admin/albums-datatable-page/album-form/album-form.tsx","../../../resources/client/web-player/backstage/upload-page/album-uploader.tsx","../../../resources/client/web-player/backstage/upload-page/tracks-uploader.tsx","../../../resources/client/web-player/backstage/upload-page/album-border.png","../../../resources/client/web-player/backstage/upload-page/uploaded-media-preview.tsx","../../../resources/client/web-player/backstage/upload-page/drop-tarket-mask.tsx","../../../resources/client/web-player/backstage/upload-page/use-user-minutes-limit.ts","../../../resources/client/web-player/backstage/upload-page/upload-page.tsx","../../../resources/client/web-player/backstage/insights/backstage-insights-layout.tsx","../../../resources/client/admin/reports/requests/use-insights-report.ts","../../../common/foundation/resources/client/ui/library/icons/material/Info.tsx","../../../resources/client/admin/reports/top-models-chart-layout.tsx","../../../resources/client/admin/reports/insights-report-charts.tsx","../../../resources/client/web-player/backstage/insights/backstage-insights-title.tsx","../../../resources/client/web-player/backstage/insights/backstage-artist-insights.tsx","../../../resources/client/web-player/backstage/insights/backstage-album-insights.tsx","../../../resources/client/web-player/backstage/insights/backstage-track-insights.tsx","../../../common/foundation/resources/client/ui/library/utils/hooks/sticky-sentinel.ts","../../../common/foundation/resources/client/admin/crupdate-resource-layout.tsx","../../../resources/client/admin/tracks-datatable-page/crupdate/create-track-page.tsx","../../../resources/client/admin/tracks-datatable-page/crupdate/update-track-page.tsx","../../../resources/client/admin/albums-datatable-page/create-album-page.tsx","../../../resources/client/admin/albums-datatable-page/requests/use-update-album.ts","../../../resources/client/admin/albums-datatable-page/update-album-page.tsx","../../../resources/client/admin/artist-datatable-page/requests/use-update-artist.ts","../../../resources/client/admin/artist-datatable-page/artist-form/artist-albums-table.tsx","../../../resources/client/admin/artist-datatable-page/artist-form/crupdate-artist-form.tsx","../../../resources/client/admin/artist-datatable-page/update-artist-page.tsx"],"sourcesContent":["export default \"__VITE_ASSET__5b7b3136__\"","export default \"__VITE_ASSET__430d5aeb__\"","import {Navbar} from '@common/ui/navigation/navbar/navbar';\nimport {Footer} from '@common/ui/footer/footer';\nimport lightBgImage from './images/light-bg.svg';\nimport darkBgImage from './images/dark-bg.svg';\nimport {useIsDarkMode} from '@ui/themes/use-is-dark-mode';\nimport {ComponentPropsWithoutRef, ReactNode} from 'react';\n\ninterface Props extends ComponentPropsWithoutRef<'div'> {\n  children: ReactNode;\n}\nexport function BackstageLayout({children, ...domProps}: Props) {\n  const isDarkMode = useIsDarkMode();\n  return (\n    <div className=\"flex h-screen flex-col\" {...domProps}>\n      <Navbar className=\"flex-shrink-0\" color=\"bg\" darkModeColor=\"bg\" />\n      <div\n        className=\"relative flex-auto overflow-y-auto bg-cover\"\n        style={{\n          backgroundImage: `url(${isDarkMode ? darkBgImage : lightBgImage})`,\n        }}\n      >\n        <div className=\"container mx-auto flex min-h-full flex-col p-14 md:p-24\">\n          <div className=\"flex-auto\">{children}</div>\n          <Footer />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import {\n  keepPreviousData,\n  useQuery,\n  UseQueryOptions,\n} from '@tanstack/react-query';\nimport {PaginatedBackendResponse} from '../../http/backend-response/pagination-response';\nimport {apiClient} from '../../http/query-client';\n\nexport interface GetDatatableDataParams {\n  orderBy?: string;\n  orderDir?: 'asc' | 'desc';\n  filters?: string | null;\n  query?: string;\n  with?: string;\n  perPage?: number | string | null;\n  page?: number | string | null;\n  paginate?: 'simple' | 'lengthAware' | 'preferLengthAware' | 'cursor';\n  [key: string]: string | number | boolean | undefined | null;\n}\n\nexport const DatatableDataQueryKey = (\n  endpoint: string,\n  params?: GetDatatableDataParams | Record<string, string | number | boolean>,\n  baseQueryKey?: string[],\n) => {\n  // split endpoint by slash, so we can clear cache from the root later,\n  // for example, 'link-group' will clear 'link-group/1/links' endpoint\n  const key: (string | GetDatatableDataParams)[] = baseQueryKey\n    ? [...baseQueryKey]\n    : endpoint.split('/');\n  if (params) {\n    key.push(params);\n  }\n  return key;\n};\n\nexport function useDatatableData<T = object>(\n  endpoint: string,\n  params: GetDatatableDataParams,\n  options?: Omit<\n    UseQueryOptions<\n      PaginatedBackendResponse<T>,\n      unknown,\n      PaginatedBackendResponse<T>,\n      any[]\n    >,\n    'queryKey' | 'queryFn'\n  > & {baseQueryKey?: string[]},\n  onLoad?: (data: PaginatedBackendResponse<T>) => void,\n) {\n  if (!params.paginate) {\n    params.paginate = 'preferLengthAware';\n  }\n  // having queryKey in option will cause unnecessary re-fetching\n  const optionsQueryKey = options?.baseQueryKey;\n  delete options?.baseQueryKey;\n  return useQuery({\n    ...options,\n    queryKey: DatatableDataQueryKey(endpoint, params, optionsQueryKey),\n    queryFn: ({signal}) => paginate<T>(endpoint, params, onLoad, signal),\n    placeholderData: keepPreviousData,\n  });\n}\n\nasync function paginate<T>(\n  endpoint: string,\n  params: GetDatatableDataParams,\n  onLoad?: (data: PaginatedBackendResponse<T>) => void,\n  signal?: AbortSignal,\n): Promise<PaginatedBackendResponse<T>> {\n  if (params.query) {\n    await new Promise(resolve => setTimeout(resolve, 300));\n  }\n  const response = await apiClient\n    .get(endpoint, {params, signal: params.query ? signal : undefined})\n    .then(response => response.data);\n  onLoad?.(response);\n  return response;\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const DocumentScannerIcon = createSvgIcon(\n  <path d=\"M7 3H4v3H2V1h5v2zm15 3V1h-5v2h3v3h2zM7 21H4v-3H2v5h5v-2zm13-3v3h-3v2h5v-5h-2zM17 6H7v12h10V6zm2 12c0 1.1-.9 2-2 2H7c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2v12zM15 8H9v2h6V8zm0 3H9v2h6v-2zm0 3H9v2h6v-2z\" />\n, 'DocumentScannerOutlined');\n","import {\n  keepPreviousData,\n  useQuery,\n  UseQueryOptions,\n} from '@tanstack/react-query';\nimport {NormalizedModel} from '@ui/types/normalized-model';\nimport {apiClient} from '../../http/query-client';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\n\ninterface Response extends BackendResponse {\n  results: NormalizedModel[];\n}\n\ninterface Params {\n  query?: string;\n  perPage?: number;\n  with?: string;\n}\n\nexport function useNormalizedModels(\n  endpoint: string,\n  queryParams?: Params,\n  queryOptions?: Omit<\n    UseQueryOptions<Response, unknown, Response, any[]>,\n    'queryKey' | 'queryFn'\n  > | null,\n) {\n  return useQuery({\n    queryKey: [...endpoint.split('/'), queryParams],\n    queryFn: () => fetchModels(endpoint, queryParams),\n    placeholderData: keepPreviousData,\n    ...queryOptions,\n  });\n}\n\nasync function fetchModels(endpoint: string, params?: Params) {\n  return apiClient.get<Response>(endpoint, {params}).then(r => {\n    if ('results' in r.data) {\n      return r.data;\n    } else {\n      const results = Object.values(r.data).find(v => Array.isArray(v));\n      return {results} as Response;\n    }\n  });\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {NormalizedModel} from '@ui/types/normalized-model';\nimport {apiClient} from '../../http/query-client';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\n\ninterface Response extends BackendResponse {\n  model: NormalizedModel;\n}\n\nexport function useNormalizedModel(\n  endpoint: string,\n  queryParams?: Record<string, string>,\n  queryOptions?: {enabled?: boolean},\n) {\n  return useQuery({\n    queryKey: [endpoint, queryParams],\n    queryFn: () => fetchModel(endpoint, queryParams),\n    ...queryOptions,\n  });\n}\n\nasync function fetchModel(\n  endpoint: string,\n  params?: Record<string, string>,\n): Promise<Response> {\n  return apiClient.get(endpoint, {params}).then(r => r.data);\n}\n","import React, {ReactNode, useRef, useState} from 'react';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {Trans} from '@ui/i18n/trans';\nimport {Avatar} from '@ui/avatar/avatar';\nimport {Tooltip} from '@ui/tooltip/tooltip';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {message} from '@ui/i18n/message';\nimport {Item} from '@ui/forms/listbox/item';\nimport {useController, useFormContext} from 'react-hook-form';\nimport {useControlledState} from '@react-stately/utils';\nimport {getInputFieldClassNames} from '@ui/forms/input-field/get-input-field-class-names';\nimport clsx from 'clsx';\nimport {Skeleton} from '@ui/skeleton/skeleton';\nimport {useNormalizedModels} from '@common/ui/normalized-model/use-normalized-models';\nimport {useNormalizedModel} from '@common/ui/normalized-model/use-normalized-model';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {opacityAnimation} from '@ui/animation/opacity-animation';\nimport {Select} from '@ui/forms/select/select';\nimport {MessageDescriptor} from '@ui/i18n/message-descriptor';\nimport {BaseFieldProps} from '@ui/forms/input-field/base-field-props';\nimport {EditIcon} from '@ui/icons/material/Edit';\n\ninterface NormalizedModelFieldProps {\n  label?: ReactNode;\n  className?: string;\n  background?: BaseFieldProps['background'];\n  value?: string | number;\n  placeholder?: MessageDescriptor;\n  searchPlaceholder?: MessageDescriptor;\n  defaultValue?: string | number;\n  onChange?: (value: string | number) => void;\n  invalid?: boolean;\n  errorMessage?: string;\n  description?: ReactNode;\n  autoFocus?: boolean;\n  queryParams?: Record<string, string>;\n  endpoint: string;\n  disabled?: boolean;\n  required?: boolean;\n}\nexport function NormalizedModelField({\n  label,\n  className,\n  background,\n  value,\n  defaultValue = '',\n  placeholder = message('Select item...'),\n  searchPlaceholder = message('Find an item...'),\n  onChange,\n  description,\n  errorMessage,\n  invalid,\n  autoFocus,\n  queryParams,\n  endpoint,\n  disabled,\n  required,\n}: NormalizedModelFieldProps) {\n  const inputRef = useRef<HTMLButtonElement>(null);\n  const [inputValue, setInputValue] = useState('');\n  const [selectedValue, setSelectedValue] = useControlledState(\n    value,\n    defaultValue,\n    onChange,\n  );\n  const query = useNormalizedModels(endpoint, {\n    query: inputValue,\n    ...queryParams,\n  });\n  const {trans} = useTrans();\n\n  const fieldClassNames = getInputFieldClassNames({size: 'md'});\n\n  if (selectedValue) {\n    return (\n      <div className={className}>\n        <div className={fieldClassNames.label}>{label}</div>\n        <div\n          className={clsx(\n            'rounded-input border p-8',\n            background,\n            invalid && 'border-danger',\n          )}\n        >\n          <AnimatePresence initial={false} mode=\"wait\">\n            <SelectedModelPreview\n              disabled={disabled}\n              endpoint={endpoint}\n              modelId={selectedValue}\n              queryParams={queryParams}\n              onEditClick={() => {\n                setSelectedValue('');\n                setInputValue('');\n                requestAnimationFrame(() => {\n                  inputRef.current?.focus();\n                  inputRef.current?.click();\n                });\n              }}\n            />\n          </AnimatePresence>\n        </div>\n        {description && !errorMessage && (\n          <div className={fieldClassNames.description}>{description}</div>\n        )}\n        {errorMessage && (\n          <div className={fieldClassNames.error}>{errorMessage}</div>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <Select\n      className={className}\n      showSearchField\n      invalid={invalid}\n      errorMessage={errorMessage}\n      description={description}\n      color=\"white\"\n      isAsync\n      background={background}\n      placeholder={trans(placeholder)}\n      searchPlaceholder={trans(searchPlaceholder)}\n      label={label}\n      isLoading={query.isFetching}\n      items={query.data?.results}\n      inputValue={inputValue}\n      onInputValueChange={setInputValue}\n      selectionMode=\"single\"\n      selectedValue={selectedValue}\n      onSelectionChange={setSelectedValue}\n      ref={inputRef}\n      autoFocus={autoFocus}\n      disabled={disabled}\n      required={required}\n    >\n      {model => (\n        <Item\n          value={model.id}\n          key={model.id}\n          description={model.description}\n          startIcon={<Avatar src={model.image} size=\"sm\" label={model.name} />}\n        >\n          {model.name}\n        </Item>\n      )}\n    </Select>\n  );\n}\n\ninterface SelectedModelPreviewProps {\n  modelId: string | number;\n  selectedValue?: number | string;\n  onEditClick?: () => void;\n  endpoint?: string;\n  disabled?: boolean;\n  queryParams?: NormalizedModelFieldProps['queryParams'];\n}\nfunction SelectedModelPreview({\n  modelId,\n  onEditClick,\n  endpoint,\n  disabled,\n  queryParams,\n}: SelectedModelPreviewProps) {\n  const {data, isLoading} = useNormalizedModel(\n    `${endpoint}/${modelId}`,\n    queryParams,\n  );\n\n  if (isLoading || !data?.model) {\n    return <LoadingSkeleton key=\"skeleton\" />;\n  }\n\n  return (\n    <m.div\n      className={clsx(\n        'flex items-center gap-10',\n        disabled && 'pointer-events-none cursor-not-allowed text-disabled',\n      )}\n      key=\"preview\"\n      {...opacityAnimation}\n    >\n      <Avatar src={data.model.image} label={data.model.name} />\n      <div>\n        <div className=\"text-sm leading-4\">{data.model.name}</div>\n        <div className=\"text-xs text-muted\">{data.model.description}</div>\n      </div>\n      <Tooltip label={<Trans message=\"Change item\" />}>\n        <IconButton\n          className=\"ml-auto text-muted\"\n          size=\"sm\"\n          onClick={onEditClick}\n          disabled={disabled}\n        >\n          <EditIcon />\n        </IconButton>\n      </Tooltip>\n    </m.div>\n  );\n}\n\nfunction LoadingSkeleton() {\n  return (\n    <m.div className=\"flex items-center gap-10\" {...opacityAnimation}>\n      <Skeleton variant=\"rect\" size=\"w-32 h-32\" />\n      <div className=\"max-h-[36px] flex-auto\">\n        <Skeleton className=\"text-xs\" />\n        <Skeleton className=\"max-h-8 text-xs\" />\n      </div>\n      <Skeleton variant=\"icon\" size=\"w-24 h-24\" />\n    </m.div>\n  );\n}\n\ninterface FormNormalizedModelFieldProps extends NormalizedModelFieldProps {\n  name: string;\n}\nexport function FormNormalizedModelField({\n  name,\n  ...fieldProps\n}: FormNormalizedModelFieldProps) {\n  const {clearErrors} = useFormContext();\n  const {\n    field: {onChange, value = ''},\n    fieldState: {invalid, error},\n  } = useController({\n    name,\n  });\n\n  return (\n    <NormalizedModelField\n      value={value}\n      onChange={value => {\n        onChange(value);\n        clearErrors(name);\n      }}\n      invalid={invalid}\n      errorMessage={error?.message}\n      {...fieldProps}\n    />\n  );\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {useParams} from 'react-router';\nimport {BackstageRequest} from '@app/web-player/backstage/backstage-request';\n\ninterface Response extends BackendResponse {\n  request: BackstageRequest;\n}\n\nexport function useBackstageRequest() {\n  const {requestId} = useParams();\n  return useQuery({\n    queryKey: ['backstage-request', +requestId!],\n    queryFn: () => fetchBackstageRequest(requestId!),\n  });\n}\n\nfunction fetchBackstageRequest(trackId: number | string) {\n  return apiClient\n    .get<Response>(`backstage-request/${trackId}`)\n    .then(response => response.data);\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {UseFormReturn} from 'react-hook-form';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {toast} from '@ui/toast/toast';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {message} from '@ui/i18n/message';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {Track} from '@app/web-player/tracks/track';\nimport {NormalizedModel} from '@ui/types/normalized-model';\nimport {TrackUploadPayload} from '@app/web-player/backstage/upload-page/use-track-uploader';\n\nconst endpoint = 'tracks';\n\nexport interface CreateTrackResponse extends BackendResponse {\n  track: Track;\n}\n\nexport interface CreateTrackPayload\n  extends Omit<\n    Track,\n    'genres' | 'artists' | 'tags' | 'id' | 'model_type' | 'album' | 'lyric'\n  > {\n  album_id?: number;\n  artists?: NormalizedModel[];\n  waveData?: number[][];\n  genres?: NormalizedModel[] | string[];\n  tags?: NormalizedModel[];\n  lyric?: string;\n}\n\ninterface Options {\n  onSuccess?: (response: CreateTrackResponse) => void;\n}\n\nexport function useCreateTrack(\n  form: UseFormReturn<CreateTrackPayload> | UseFormReturn<TrackUploadPayload>,\n  {onSuccess}: Options = {},\n) {\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: (payload: CreateTrackPayload) => createTrack(payload),\n    onSuccess: response => {\n      toast(trans(message('Track created')));\n      queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey(endpoint),\n      });\n      onSuccess?.(response);\n    },\n    onError: err => onFormQueryError(err, form),\n  });\n}\n\nfunction createTrack(payload: CreateTrackPayload) {\n  return apiClient\n    .post<CreateTrackResponse>(endpoint, prepareTrackPayload(payload))\n    .then(r => r.data);\n}\n\nexport function prepareTrackPayload(payload: CreateTrackPayload) {\n  return {\n    ...payload,\n    album_id: payload.album_id ? payload.album_id : null,\n    artists: payload.artists?.map(artist => artist.id),\n  };\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {UseFormReturn} from 'react-hook-form';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {toast} from '@ui/toast/toast';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {message} from '@ui/i18n/message';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {NormalizedModel} from '@ui/types/normalized-model';\nimport {Album} from '@app/web-player/albums/album';\nimport {\n  CreateTrackPayload,\n  prepareTrackPayload,\n} from '@app/admin/tracks-datatable-page/requests/use-create-track';\n\nconst endpoint = 'albums';\n\ninterface Response extends BackendResponse {\n  album: Album;\n}\n\nexport type CreateAlbumPayloadTrack = Omit<\n  CreateTrackPayload,\n  'album' | 'artists' | 'lyric'\n> & {\n  uploadId: string;\n};\n\nexport interface CreateAlbumPayload\n  extends Omit<Album, 'genres' | 'tags' | 'tracks' | 'artists'> {\n  artists: NormalizedModel[];\n  genres?: NormalizedModel[] | string[];\n  tags?: NormalizedModel[];\n  tracks: CreateAlbumPayloadTrack[];\n}\n\nexport function useCreateAlbum(form: UseFormReturn<CreateAlbumPayload>) {\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: (payload: CreateAlbumPayload) => createAlbum(payload),\n    onSuccess: () => {\n      toast(trans(message('Album created')));\n      queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey(endpoint),\n      });\n    },\n    onError: err => onFormQueryError(err, form),\n  });\n}\n\nfunction createAlbum(payload: CreateAlbumPayload) {\n  return apiClient\n    .post<Response>(endpoint, prepareAlbumPayload(payload))\n    .then(r => r.data);\n}\n\nexport function prepareAlbumPayload(payload: CreateAlbumPayload) {\n  return {\n    ...payload,\n    artists: payload.artists?.map(artist => artist.id),\n    tracks: payload.tracks?.map(track => prepareTrackPayload(track)),\n  };\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\nimport {Album} from '@app/web-player/albums/album';\nimport {Artist} from '@app/web-player/artists/artist';\nimport {FileEntry} from '@common/uploads/file-entry';\nimport {CreateTrackPayload} from '@app/admin/tracks-datatable-page/requests/use-create-track';\nimport {NormalizedModel} from '@ui/types/normalized-model';\nimport {UseFormReturn} from 'react-hook-form';\nimport {CreateAlbumPayload} from '@app/admin/albums-datatable-page/requests/use-create-album';\n\nexport type ExtractedTrackMetadata = Partial<CreateTrackPayload> & {\n  release_date?: string;\n  album_name?: string;\n};\n\ninterface Response extends BackendResponse {\n  metadata: {\n    title?: string;\n    album?: Album;\n    album_name?: string;\n    artist?: Artist;\n    artist_name?: string;\n    genres?: string[];\n    duration?: number;\n    release_date?: string;\n    comment?: string;\n    image?: FileEntry;\n    lyrics?: string;\n  };\n}\n\ninterface Payload {\n  fileEntryId: number;\n  autoMatchAlbum?: boolean;\n}\n\nexport function useExtractTackFileMetadata() {\n  return useMutation({\n    mutationFn: (payload: Payload) => extractMeta(payload),\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction extractMeta(payload: Payload): Promise<ExtractedTrackMetadata> {\n  return apiClient\n    .post<Response>(`tracks/${payload.fileEntryId}/extract-metadata`, payload)\n    .then(r => metadataToFormValues(r.data));\n}\n\nfunction metadataToFormValues(response: Response): ExtractedTrackMetadata {\n  const values: ExtractedTrackMetadata = {\n    name: response.metadata.title,\n    duration: response.metadata.duration,\n    genres: response.metadata.genres || [],\n    description: response.metadata.comment,\n    lyric: response.metadata.lyrics,\n    release_date: response.metadata.release_date,\n    album_name: response.metadata.album_name,\n  };\n  if (response.metadata.album) {\n    values.album_id = response.metadata.album.id;\n  }\n  if (response.metadata.artist) {\n    values.artists = [response.metadata.artist];\n  }\n  if (response.metadata.image) {\n    values.image = response.metadata.image.url;\n  }\n  return values;\n}\n\nexport function hydrateAlbumForm(\n  form: UseFormReturn<CreateAlbumPayload>,\n  data: ExtractedTrackMetadata,\n) {\n  if (!form.getValues('artists')?.length && data.artists) {\n    form.setValue('artists', data.artists);\n  }\n  if (!form.getValues('image') && data.image) {\n    form.setValue('image', data.image);\n  }\n  if (data.release_date) {\n    form.setValue('release_date', data.release_date);\n  }\n  if (data.genres?.length) {\n    form.setValue(\n      'genres',\n      // @ts-ignore\n      mergeArraysWithoutDuplicates(form.getValues('genres'), data.genres),\n    );\n  }\n  if (!form.getValues('name') && data.album_name) {\n    form.setValue('name', data.album_name);\n  }\n}\n\ntype Values = Partial<CreateTrackPayload>;\nexport function mergeTrackFormValues<\n  T extends Values = Values,\n  E extends Values = Values,\n>(newValues: T, oldValues: E): T & E {\n  return {\n    ...oldValues,\n    ...newValues,\n    artists: mergeArraysWithoutDuplicates(oldValues.artists, newValues.artists),\n    genres: mergeArraysWithoutDuplicates(\n      oldValues.genres as NormalizedModel[],\n      newValues.genres as NormalizedModel[],\n      'name',\n    ),\n    tags: mergeArraysWithoutDuplicates(oldValues.tags, newValues.tags, 'name'),\n  };\n}\n\nfunction mergeArraysWithoutDuplicates(\n  oldValues: NormalizedModel[] = [],\n  newValues: NormalizedModel[] = [],\n  key: keyof NormalizedModel = 'id',\n) {\n  newValues = newValues.filter(\n    nv => !oldValues.find(ov => ov[key] === nv[key]),\n  );\n  return [...oldValues, ...newValues];\n}\n","import {useSettings} from '@ui/settings/use-settings';\nimport {\n  ExtractedTrackMetadata,\n  useExtractTackFileMetadata,\n} from '@app/admin/tracks-datatable-page/requests/use-extract-track-file-metadata';\nimport {UploadStrategyConfig} from '@common/uploads/uploader/strategy/upload-strategy';\nimport {useCallback, useMemo, useRef} from 'react';\nimport {FileEntry} from '@common/uploads/file-entry';\nimport {toast} from '@ui/toast/toast';\nimport {useFileUploadStore} from '@common/uploads/uploader/file-upload-provider';\nimport {openUploadWindow} from '@ui/utils/files/open-upload-window';\nimport {generateWaveformData} from '@app/web-player/tracks/waveform/generate-waveform-data';\nimport {UploadedFile} from '@ui/utils/files/uploaded-file';\nimport {CreateTrackPayload} from '@app/admin/tracks-datatable-page/requests/use-create-track';\nimport {message} from '@ui/i18n/message';\nimport {FileInputType} from '@ui/utils/files/file-input-config';\nimport {Disk} from '@common/uploads/uploader/backend-metadata';\nimport {validateFile} from '@ui/utils/files/validate-file';\n\nconst FiftyMB = 50 * 1024 * 1024;\n\nexport interface TrackUploadMeta {\n  isGeneratingWave?: boolean;\n  isExtractingMetadata?: boolean;\n}\n\nexport type TrackUploadPayload = CreateTrackPayload & {uploadId: string};\n\ninterface Options {\n  autoMatchAlbum?: boolean;\n  onUploadStart?: (data: TrackUploadPayload) => void;\n  onMetadataChange: (\n    file: UploadedFile,\n    newData: ExtractedTrackMetadata & {waveData?: number[][]},\n  ) => void;\n}\nexport function useTrackUploader(options: Options) {\n  const {uploads} = useSettings();\n  const restrictions = useMemo(\n    () => ({\n      allowedFileTypes: [FileInputType.audio, FileInputType.video],\n      maxFileSize: uploads.max_size || FiftyMB,\n    }),\n    [uploads.max_size],\n  );\n\n  const extractMetadata = useExtractTackFileMetadata();\n  const optionsRef = useRef<Options>(options);\n  optionsRef.current = options;\n\n  const uploadMultiple = useFileUploadStore(s => s.uploadMultiple);\n  const updateFileUpload = useFileUploadStore(s => s.updateFileUpload);\n  const getUpload = useFileUploadStore(s => s.getUpload);\n  const updateUpload = useCallback(\n    (uploadId: string, newMeta: TrackUploadMeta) => {\n      updateFileUpload(uploadId, {\n        meta: {\n          // @ts-ignore\n          ...(getUpload(uploadId)?.meta || {}),\n          ...newMeta,\n        },\n      });\n    },\n    [updateFileUpload, getUpload],\n  );\n\n  // todo: playback source is not set if extract metadata request errors out\n  const uploadOptions: UploadStrategyConfig = useMemo(() => {\n    return {\n      metadata: {\n        diskPrefix: 'track_media',\n        disk: Disk.public,\n      },\n      restrictions,\n      onSuccess: (entry: FileEntry, file) => {\n        updateUpload(file.id, {isExtractingMetadata: true});\n        extractMetadata.mutate(\n          {\n            fileEntryId: entry.id,\n            autoMatchAlbum: optionsRef.current.autoMatchAlbum,\n          },\n          {\n            onSuccess: formValues => {\n              updateUpload(file.id, {isExtractingMetadata: false});\n              const newValues: ExtractedTrackMetadata = {\n                ...formValues,\n                src: entry.url,\n              };\n              optionsRef.current.onMetadataChange(file, newValues);\n            },\n            onError: () => {\n              updateUpload(file.id, {isExtractingMetadata: false});\n            },\n          },\n        );\n      },\n      onError: message => {\n        if (message) {\n          toast.danger(message);\n        }\n      },\n    };\n  }, [extractMetadata, updateUpload, restrictions]);\n\n  const validateUploads = useCallback(\n    (files: UploadedFile[]) => {\n      const validFiles = files.filter(\n        file => !validateFile(file, restrictions),\n      );\n      // show error message, if some files did not pass validation\n      if (files.length !== validFiles.length) {\n        toast.danger(\n          message(':count of your files is not supported.', {\n            values: {count: files.length - validFiles.length},\n          }),\n        );\n      }\n      return validFiles;\n    },\n    [restrictions],\n  );\n\n  const uploadTracks = useCallback(\n    async (files: UploadedFile[]) => {\n      const validFiles = validateUploads(files);\n      if (!validFiles.length) return;\n      files.forEach(file => {\n        optionsRef.current.onUploadStart?.({\n          name: file.name,\n          uploadId: file.id,\n        });\n      });\n      uploadMultiple(files, uploadOptions);\n      for (const file of files) {\n        updateUpload(file.id, {isGeneratingWave: true});\n        const waveData = await generateWaveformData(file.native);\n        if (waveData) {\n          optionsRef.current.onMetadataChange(file, {waveData});\n        }\n        updateUpload(file.id, {isGeneratingWave: false});\n      }\n    },\n    [uploadOptions, uploadMultiple, updateUpload, validateUploads],\n  );\n\n  const openFilePicker = useCallback(async () => {\n    const files = await openUploadWindow({\n      multiple: true,\n      types: restrictions.allowedFileTypes,\n    });\n    await uploadTracks(files);\n  }, [uploadTracks, restrictions]);\n\n  return {openFilePicker, uploadTracks, validateUploads};\n}\n","import {ChipValue} from './chip-field';\n\nexport function stringToChipValue(value: string | number): ChipValue {\n  // add both name and description so \"validateWith\" works properly in chip field, if it depends on description\n  return {id: value, name: `${value}`, description: `${value}`};\n}\n","import React, {\n  HTMLAttributes,\n  Key,\n  ReactElement,\n  ReactNode,\n  Ref,\n  RefObject,\n  useCallback,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport {useFocusManager} from '@react-aria/focus';\nimport clsx from 'clsx';\nimport {mergeProps, useLayoutEffect, useObjectRef} from '@react-aria/utils';\nimport {useControlledState} from '@react-stately/utils';\nimport {ChipList} from './chip-list';\nimport {Field, FieldProps} from '../field';\nimport {Input} from '../input';\nimport {Chip, ChipProps} from './chip';\nimport {NormalizedModel} from '@ui/types/normalized-model';\nimport {getInputFieldClassNames} from '../get-input-field-class-names';\nimport {ProgressCircle} from '@ui/progress/progress-circle';\nimport {useField} from '../use-field';\nimport {Listbox} from '../../listbox/listbox';\nimport {useListbox} from '../../listbox/use-listbox';\nimport {BaseFieldPropsWithDom} from '../base-field-props';\nimport {useListboxKeyboardNavigation} from '../../listbox/use-listbox-keyboard-navigation';\nimport {createEventHandler} from '@ui/utils/dom/create-event-handler';\nimport {ListBoxChildren, ListboxProps} from '../../listbox/types';\nimport {stringToChipValue} from './string-to-chip-value';\nimport {KeyboardArrowDownIcon} from '@ui/icons/material/KeyboardArrowDown';\nimport {Avatar} from '@ui/avatar/avatar';\nimport {Popover} from '@ui/overlays/popover';\n\nexport interface ChipValue extends Omit<NormalizedModel, 'model_type'> {\n  invalid?: boolean;\n  errorMessage?: string;\n}\n\nexport type ChipFieldProps<T> = Omit<\n  ListboxProps,\n  'selectionMode' | 'displayWith'\n> &\n  Omit<\n    BaseFieldPropsWithDom<HTMLInputElement>,\n    'value' | 'onChange' | 'defaultValue'\n  > & {\n    value?: (ChipValue | string)[];\n    defaultValue?: (ChipValue | string)[];\n    displayWith?: (value: ChipValue) => ReactNode;\n    validateWith?: (value: ChipValue) => ChipValue;\n    allowCustomValue?: boolean;\n    showDropdownArrow?: boolean;\n    onChange?: (value: ChipValue[]) => void;\n    suggestions?: T[];\n    children?: ListBoxChildren<T>['children'];\n    placeholder?: string;\n    chipSize?: ChipProps['size'];\n    openMenuOnFocus?: boolean;\n    valueKey?: 'id' | 'name';\n    onChipClick?: (value: ChipValue) => void;\n    alwaysShowAvatar?: boolean;\n    readOnly?: boolean;\n  };\n\nfunction ChipFieldInner<T>(\n  props: ChipFieldProps<T>,\n  ref: Ref<HTMLInputElement>,\n) {\n  const fieldRef = useRef<HTMLDivElement>(null);\n  const inputRef = useObjectRef(ref);\n  const {\n    displayWith = v => v.name,\n    validateWith,\n    children,\n    suggestions,\n    isLoading,\n    inputValue,\n    onInputValueChange,\n    onItemSelected,\n    placeholder,\n    onOpenChange,\n    chipSize = 'sm',\n    openMenuOnFocus = true,\n    showEmptyMessage,\n    value: propsValue,\n    defaultValue,\n    onChange: propsOnChange,\n    valueKey,\n    isAsync,\n    allowCustomValue = true,\n    showDropdownArrow,\n    onChipClick,\n    alwaysShowAvatar = false,\n    readOnly,\n    ...inputFieldProps\n  } = props;\n  const fieldClassNames = getInputFieldClassNames({\n    ...props,\n    flexibleHeight: true,\n  });\n\n  const [value, onChange] = useChipFieldValueState(props);\n\n  const [listboxIsOpen, setListboxIsOpen] = useState(false);\n\n  const loadingIndicator = (\n    <ProgressCircle isIndeterminate size=\"w-24 h-24\" aria-label=\"loading...\" />\n  );\n\n  const dropdownArrow = showDropdownArrow ? <KeyboardArrowDownIcon /> : null;\n\n  const {fieldProps, inputProps} = useField({\n    ...inputFieldProps,\n    focusRef: inputRef,\n    endAdornment: isLoading && listboxIsOpen ? loadingIndicator : dropdownArrow,\n  });\n\n  return (\n    <Field fieldClassNames={fieldClassNames} {...fieldProps}>\n      <Input\n        ref={fieldRef}\n        className={clsx('flex flex-wrap items-center', fieldClassNames.input)}\n        onClick={() => {\n          // refocus input when clicking outside it, but while still inside chip field\n          inputRef.current?.focus();\n        }}\n      >\n        <ListWrapper\n          displayChipUsing={displayWith}\n          onChipClick={onChipClick}\n          items={value}\n          setItems={onChange}\n          chipSize={chipSize}\n          alwaysShowAvatar={alwaysShowAvatar}\n          readOnly={readOnly}\n        />\n        <ChipInput\n          size={props.size}\n          showEmptyMessage={showEmptyMessage}\n          inputProps={inputProps}\n          inputValue={inputValue}\n          onInputValueChange={onInputValueChange}\n          fieldRef={fieldRef}\n          inputRef={inputRef}\n          chips={value}\n          setChips={onChange}\n          validateWith={validateWith}\n          isLoading={isLoading}\n          suggestions={suggestions}\n          placeholder={placeholder}\n          openMenuOnFocus={openMenuOnFocus}\n          listboxIsOpen={listboxIsOpen}\n          setListboxIsOpen={setListboxIsOpen}\n          allowCustomValue={allowCustomValue}\n          readOnly={readOnly}\n        >\n          {children}\n        </ChipInput>\n      </Input>\n    </Field>\n  );\n}\n\ninterface ListWrapperProps {\n  items: ChipValue[];\n  setItems: (items: ChipValue[]) => void;\n  displayChipUsing: (value: ChipValue) => ReactNode;\n  chipSize?: ChipProps['size'];\n  onChipClick?: (value: ChipValue) => void;\n  alwaysShowAvatar?: boolean;\n  readOnly?: boolean;\n}\nfunction ListWrapper({\n  items,\n  setItems,\n  displayChipUsing,\n  chipSize,\n  onChipClick,\n  alwaysShowAvatar,\n  readOnly,\n}: ListWrapperProps) {\n  const manager = useFocusManager();\n  const removeItem = useCallback(\n    (key: Key) => {\n      const i = items.findIndex(cr => cr.id === key);\n      const newItems = [...items];\n      if (i > -1) {\n        newItems.splice(i, 1);\n        setItems(newItems);\n      }\n      return newItems;\n    },\n    [items, setItems],\n  );\n\n  return (\n    <ChipList\n      className={clsx(\n        'max-w-full flex-shrink-0 flex-wrap',\n        chipSize === 'xs' ? 'my-6' : 'my-8',\n      )}\n      size={chipSize}\n      selectable\n    >\n      {items.map(item => (\n        <Chip\n          key={item.id}\n          errorMessage={item.errorMessage}\n          adornment={\n            item.image || alwaysShowAvatar ? (\n              <Avatar\n                circle\n                src={item.image}\n                fallback=\"initials\"\n                label={item.name}\n              />\n            ) : null\n          }\n          onClick={() => onChipClick?.(item)}\n          onRemove={\n            readOnly\n              ? undefined\n              : () => {\n                  const newItems = removeItem(item.id);\n                  if (newItems.length) {\n                    // focus previous chip\n                    manager?.focusPrevious({tabbable: true});\n                  } else {\n                    // focus input\n                    manager?.focusLast();\n                  }\n                }\n          }\n        >\n          {displayChipUsing(item)}\n        </Chip>\n      ))}\n    </ChipList>\n  );\n}\n\ninterface ChipInputProps<T> {\n  showEmptyMessage?: boolean;\n  inputProps: ReturnType<typeof useField>['inputProps'];\n  inputValue?: string;\n  onInputValueChange?: (value: string) => void;\n  fieldRef: RefObject<HTMLDivElement>;\n  inputRef: RefObject<HTMLInputElement>;\n  chips: ChipValue[];\n  setChips: (items: ChipValue[]) => void;\n  validateWith?: (value: ChipValue) => ChipValue;\n  isLoading?: boolean;\n  suggestions?: T[];\n  placeholder?: string;\n  openMenuOnFocus?: boolean;\n  listboxIsOpen: boolean;\n  setListboxIsOpen: (value: boolean) => void;\n  allowCustomValue: boolean;\n  children: ListBoxChildren<T>['children'];\n  size: FieldProps['size'];\n  readOnly?: boolean;\n}\nfunction ChipInput<T>(props: ChipInputProps<T>) {\n  const {\n    inputRef,\n    fieldRef,\n    validateWith,\n    setChips,\n    chips,\n    suggestions,\n    inputProps,\n    placeholder,\n    openMenuOnFocus,\n    listboxIsOpen,\n    setListboxIsOpen,\n    allowCustomValue,\n    isLoading,\n    size,\n    readOnly,\n  } = props;\n  const manager = useFocusManager();\n\n  const addItems = useCallback(\n    (items?: ChipValue[]) => {\n      items = (items || []).filter(item => {\n        const invalid = !item || !item.id || !item.name;\n        const alreadyExists = chips.findIndex(cr => cr.id === item?.id) > -1;\n        return !alreadyExists && !invalid;\n      });\n      if (!items.length) return;\n\n      if (validateWith) {\n        items = items.map(item => validateWith(item));\n      }\n      setChips([...chips, ...items]);\n    },\n    [chips, setChips, validateWith],\n  );\n\n  const listbox = useListbox<T>({\n    ...props,\n    clearInputOnItemSelection: true,\n    isOpen: listboxIsOpen,\n    onOpenChange: setListboxIsOpen,\n    items: suggestions,\n    selectionMode: 'none',\n    role: 'listbox',\n    virtualFocus: true,\n    onItemSelected: value => {\n      handleItemSelection(value as string);\n    },\n  });\n\n  const {\n    state: {\n      activeIndex,\n      setActiveIndex,\n      isOpen,\n      setIsOpen,\n      inputValue,\n      setInputValue,\n    },\n    refs,\n    listboxId,\n    collection,\n    onInputChange,\n  } = listbox;\n\n  const handleItemSelection = (textValue: string) => {\n    const option =\n      collection.size && activeIndex != null\n        ? [...collection.values()][activeIndex]\n        : null;\n    if (option?.item) {\n      addItems([option.item]);\n    } else if (allowCustomValue) {\n      addItems([stringToChipValue(option ? option.value : textValue)]);\n    }\n\n    setInputValue('');\n    setActiveIndex(null);\n    setIsOpen(false);\n  };\n\n  // position dropdown relative to whole chip field, not the input\n  useLayoutEffect(() => {\n    if (fieldRef.current && refs.reference.current !== fieldRef.current) {\n      listbox.reference(fieldRef.current);\n    }\n  }, [fieldRef, listbox, refs]);\n\n  const {handleTriggerKeyDown, handleListboxKeyboardNavigation} =\n    useListboxKeyboardNavigation(listbox);\n\n  const handleFocusAndClick = createEventHandler(() => {\n    if (openMenuOnFocus && !isOpen) {\n      setIsOpen(true);\n    }\n  });\n\n  return (\n    <Listbox\n      listbox={listbox}\n      mobileOverlay={Popover}\n      isLoading={isLoading}\n      onPointerDown={e => {\n        // prevent focus from leaving input when scrolling listbox via mouse\n        e.preventDefault();\n      }}\n    >\n      <input\n        readOnly={readOnly}\n        type=\"text\"\n        className={clsx(\n          'mx-8 my-4 min-w-30 flex-[1_1_60px] bg-transparent text-sm outline-none',\n          size === 'xs' ? 'h-20' : 'h-30',\n        )}\n        placeholder={placeholder}\n        {...mergeProps(inputProps, {\n          ref: inputRef,\n          value: inputValue,\n          onChange: onInputChange,\n          onPaste: e => {\n            const paste = e.clipboardData.getData('text');\n            const emails = paste.match(\n              /([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9._-]+)/gi,\n            );\n            if (emails) {\n              e.preventDefault();\n              const selection = window.getSelection();\n              if (selection?.rangeCount) {\n                selection.deleteFromDocument();\n                addItems(emails.map(email => stringToChipValue(email)));\n              }\n            }\n          },\n          'aria-autocomplete': 'list',\n          'aria-controls': isOpen ? listboxId : undefined,\n          autoComplete: 'off',\n          autoCorrect: 'off',\n          spellCheck: 'false',\n          onKeyDown: e => {\n            if (readOnly) return;\n\n            const input = e.target as HTMLInputElement;\n\n            if (e.key === 'Enter') {\n              // prevent form submitting\n              e.preventDefault();\n              // add chip from selected listbox option or current input text value\n              handleItemSelection(input.value);\n              return;\n            }\n\n            // on escape, clear input and close dropdown\n            if (e.key === 'Escape' && isOpen) {\n              setIsOpen(false);\n              setInputValue('');\n            }\n\n            // move focus to input when focus is on first item and prevent arrow up from cycling listbox\n            if (\n              e.key === 'ArrowUp' &&\n              isOpen &&\n              (activeIndex === 0 || activeIndex == null)\n            ) {\n              setActiveIndex(null);\n              return;\n            }\n\n            // block left and right arrows from navigating in input, if focus is on listbox\n            if (\n              activeIndex != null &&\n              (e.key === 'ArrowLeft' || e.key === 'ArrowRight')\n            ) {\n              e.preventDefault();\n              return;\n            }\n\n            // move focus on the last chip, if focus is at the  start of input\n            if (\n              (e.key === 'ArrowLeft' ||\n                e.key === 'Backspace' ||\n                e.key === 'Delete') &&\n              input.selectionStart === 0 &&\n              activeIndex == null &&\n              chips.length\n            ) {\n              manager?.focusPrevious({tabbable: true});\n              return;\n            }\n\n            // fallthrough to listbox navigation handlers for arrow keys\n            const handled = handleTriggerKeyDown(e);\n            if (!handled) {\n              handleListboxKeyboardNavigation(e);\n            }\n          },\n          onFocus: readOnly ? undefined : handleFocusAndClick,\n          onClick: readOnly ? undefined : handleFocusAndClick,\n        } as HTMLAttributes<HTMLInputElement>)}\n      />\n    </Listbox>\n  );\n}\n\nfunction useChipFieldValueState({\n  onChange,\n  value,\n  defaultValue,\n  valueKey,\n}: ChipFieldProps<any>) {\n  // convert value from string[] to ChipValue[], if needed\n  const propsValue = useMemo(() => {\n    return mixedValueToChipValue(value);\n  }, [value]);\n\n  // convert defaultValue from string[] to ChipValue[], if needed\n  const propsDefaultValue = useMemo(() => {\n    return mixedValueToChipValue(defaultValue);\n  }, [defaultValue]);\n\n  // emit string[] or ChipValue[] on change, based on \"valueKey\" prop\n  const handleChange = useCallback(\n    (value: ChipValue[]) => {\n      const newValue = valueKey ? value.map(v => v[valueKey]) : value;\n      onChange?.(newValue as any);\n    },\n    [onChange, valueKey],\n  );\n\n  return useControlledState<ChipValue[]>(\n    !propsValue ? undefined : propsValue,\n    propsDefaultValue || [],\n    handleChange,\n  );\n}\n\nfunction mixedValueToChipValue(\n  value?: (string | number | ChipValue)[] | null,\n): ChipValue[] | undefined {\n  if (value == null) {\n    return undefined;\n  }\n\n  return value.map(v => {\n    return typeof v !== 'object' ? stringToChipValue(v as string) : v;\n  });\n}\n\nexport const ChipField = React.forwardRef(ChipFieldInner) as <T>(\n  props: ChipFieldProps<T> & {ref?: Ref<HTMLInputElement>},\n) => ReactElement;\n","import {useController} from 'react-hook-form';\nimport {mergeProps} from '@react-aria/utils';\nimport React from 'react';\nimport {ChipField, ChipFieldProps} from './chip-field';\n\nexport type FormChipFieldProps<T> = ChipFieldProps<T> & {\n  name: string;\n};\n\nexport function FormChipField<T>({children, ...props}: FormChipFieldProps<T>) {\n  const {\n    field: {onChange, onBlur, value = [], ref},\n    fieldState: {invalid, error},\n  } = useController({\n    name: props.name,\n  });\n\n  const formProps: Partial<ChipFieldProps<T>> = {\n    onChange,\n    onBlur,\n    value,\n    invalid,\n    errorMessage: error?.message,\n  };\n\n  return (\n    <ChipField ref={ref} {...mergeProps(formProps, props)}>\n      {children}\n    </ChipField>\n  );\n}\n","import {keepPreviousData, useQuery} from '@tanstack/react-query';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {NormalizedModel} from '@ui/types/normalized-model';\nimport {apiClient} from '@common/http/query-client';\n\ninterface Response extends BackendResponse {\n  results: NormalizedModel[];\n}\n\ninterface Params {\n  query?: string;\n  perPage?: number;\n}\n\nexport function useArtistPickerSuggestions(queryParams: Params) {\n  return useQuery({\n    queryKey: ['artists', 'search-suggestions', queryParams],\n    queryFn: () => fetchArtists(queryParams),\n    placeholderData: keepPreviousData,\n  });\n}\n\nasync function fetchArtists(params: Params) {\n  return apiClient\n    .get<Response>('search/suggestions/artist', {params})\n    .then(r => r.data);\n}\n","import {FormChipField} from '@ui/forms/input-field/chip-field/form-chip-field';\nimport {Trans} from '@ui/i18n/trans';\nimport React, {useState} from 'react';\nimport {useArtistPickerSuggestions} from '@app/web-player/artists/artist-picker/use-artist-picker-suggestions';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {message} from '@ui/i18n/message';\nimport {Item} from '@ui/forms/listbox/item';\n\ninterface FormArtistPickerProps {\n  name: string;\n  className?: string;\n}\nexport function FormArtistPicker({name, className}: FormArtistPickerProps) {\n  const {trans} = useTrans();\n  const [inputValue, setInputValue] = useState('');\n  const {data, isLoading} = useArtistPickerSuggestions({query: inputValue});\n\n  return (\n    <FormChipField\n      className={className}\n      name={name}\n      label={<Trans message=\"Artists\" />}\n      isAsync\n      inputValue={inputValue}\n      onInputValueChange={setInputValue}\n      suggestions={data?.results}\n      placeholder={trans(message('+Add artist'))}\n      isLoading={isLoading}\n      allowCustomValue={false}\n    >\n      {data?.results.map(result => (\n        <Item\n          value={result}\n          key={result.id}\n          startIcon={\n            result.image ? (\n              <img\n                className=\"h-24 w-24 rounded-full object-cover\"\n                src={result.image}\n                alt=\"\"\n              />\n            ) : undefined\n          }\n        >\n          {result.name}\n        </Item>\n      ))}\n    </FormChipField>\n  );\n}\n","import {FormChipField} from '@ui/forms/input-field/chip-field/form-chip-field';\nimport React, {ReactNode, useState} from 'react';\nimport {Item} from '@ui/forms/listbox/item';\nimport {useNormalizedModels} from '@common/ui/normalized-model/use-normalized-models';\n\ninterface Props {\n  model: string;\n  name: string;\n  className?: string;\n  label?: ReactNode;\n  placeholder?: string;\n  allowCustomValue?: boolean;\n}\nexport function FormNormalizedModelChipField({\n  name,\n  label,\n  placeholder,\n  model,\n  className,\n  allowCustomValue = false,\n}: Props) {\n  const [inputValue, setInputValue] = useState('');\n  const {data, isLoading} = useNormalizedModels(`normalized-models/${model}`, {\n    query: inputValue,\n  });\n  return (\n    <FormChipField\n      className={className}\n      name={name}\n      label={label}\n      isAsync\n      inputValue={inputValue}\n      onInputValueChange={setInputValue}\n      suggestions={data?.results}\n      placeholder={placeholder}\n      isLoading={isLoading}\n      allowCustomValue={allowCustomValue}\n    >\n      {data?.results.map(result => (\n        <Item\n          value={result}\n          key={result.id}\n          startIcon={\n            result.image ? (\n              <img\n                className=\"h-24 w-24 rounded-full object-cover\"\n                src={result.image}\n                alt=\"\"\n              />\n            ) : undefined\n          }\n        >\n          {result.name}\n        </Item>\n      ))}\n    </FormChipField>\n  );\n}\n","export const TAG_MODEL = 'tag';\n\nexport interface Tag {\n  id: number;\n  name: string;\n  display_name: string;\n  type: string;\n  updated_at: string;\n  created_at: string;\n  model_type: typeof TAG_MODEL;\n}\n","import {useControlledState} from '@react-stately/utils';\nimport {HTMLAttributes, useCallback, useState} from 'react';\nimport {\n  CalendarDate,\n  DateValue,\n  isSameDay,\n  toCalendarDate,\n  ZonedDateTime,\n} from '@internationalized/date';\nimport {useBaseDatePickerState} from '../use-base-date-picker-state';\nimport {useCurrentDateTime} from '@ui/i18n/use-current-date-time';\nimport {toSafeZoned} from '@ui/i18n/to-safe-zoned';\n\nexport type Granularity = 'day' | 'minute';\n\nexport type DatePickerState = BaseDatePickerState;\n\nexport interface BaseDatePickerState<T = ZonedDateTime, P = boolean> {\n  timezone: string;\n  granularity: Granularity;\n  selectedValue: T;\n  setSelectedValue: (value: T) => void;\n  calendarIsOpen: boolean;\n  setCalendarIsOpen: (isOpen: boolean) => void;\n  calendarDates: CalendarDate[];\n  setCalendarDates: (dates: CalendarDate[]) => void;\n  dayIsActive: (day: CalendarDate) => boolean;\n  dayIsHighlighted: (day: CalendarDate) => boolean;\n  dayIsRangeStart: (day: CalendarDate) => boolean;\n  dayIsRangeEnd: (day: CalendarDate) => boolean;\n  isPlaceholder: P;\n  setIsPlaceholder: (value: P) => void;\n  clear: () => void;\n  min?: ZonedDateTime;\n  max?: ZonedDateTime;\n  closeDialogOnSelection: boolean;\n  getCellProps: (\n    date: CalendarDate,\n    isSameMonth: boolean,\n  ) => HTMLAttributes<HTMLElement>;\n}\n\nexport interface DatePickerValueProps<V, CV = V> {\n  value?: V | null | '';\n  defaultValue?: V | null;\n  onChange?: (value: CV | null) => void;\n  min?: DateValue;\n  max?: DateValue;\n  granularity?: Granularity;\n  timezone?: string;\n  closeDialogOnSelection?: boolean;\n}\nexport function useDatePickerState(\n  props: DatePickerValueProps<ZonedDateTime>,\n): BaseDatePickerState {\n  const now = useCurrentDateTime();\n  const [isPlaceholder, setIsPlaceholder] = useState(\n    !props.value && !props.defaultValue,\n  );\n\n  // if user clears the date, we will want to still keep an\n  // instance internally, but return null via \"onChange\" callback\n  const setStateValue = props.onChange;\n  const [internalValue, setInternalValue] = useControlledState(\n    props.value || now,\n    props.defaultValue || now,\n    value => {\n      setIsPlaceholder(false);\n      setStateValue?.(value);\n    },\n  );\n\n  const {\n    min,\n    max,\n    granularity,\n    timezone,\n    calendarIsOpen,\n    setCalendarIsOpen,\n    closeDialogOnSelection,\n  } = useBaseDatePickerState(internalValue, props);\n\n  const clear = useCallback(() => {\n    setIsPlaceholder(true);\n    setInternalValue(now);\n    setStateValue?.(null);\n    setCalendarIsOpen(false);\n  }, [now, setInternalValue, setStateValue, setCalendarIsOpen]);\n\n  const [calendarDates, setCalendarDates] = useState<CalendarDate[]>(() => {\n    return [toCalendarDate(internalValue)];\n  });\n\n  const setSelectedValue = useCallback(\n    (newValue: DateValue) => {\n      if (min && newValue.compare(min) < 0) {\n        newValue = min;\n      } else if (max && newValue.compare(max) > 0) {\n        newValue = max;\n      }\n\n      // preserve time\n      const value = internalValue\n        ? internalValue.set(newValue)\n        : toSafeZoned(newValue, timezone);\n      setInternalValue(value);\n      setCalendarDates([toCalendarDate(value)]);\n      setIsPlaceholder(false);\n    },\n    [setInternalValue, min, max, internalValue, timezone],\n  );\n\n  const dayIsActive = useCallback(\n    (day: DateValue) => !isPlaceholder && isSameDay(internalValue, day),\n    [internalValue, isPlaceholder],\n  );\n\n  const getCellProps = useCallback(\n    (date: DateValue): HTMLAttributes<HTMLElement> => {\n      return {\n        onClick: () => {\n          setSelectedValue?.(date);\n          if (closeDialogOnSelection) {\n            setCalendarIsOpen?.(false);\n          }\n        },\n      };\n    },\n    [setSelectedValue, setCalendarIsOpen, closeDialogOnSelection],\n  );\n\n  return {\n    selectedValue: internalValue,\n    setSelectedValue: setInternalValue,\n    calendarIsOpen,\n    setCalendarIsOpen,\n    dayIsActive,\n    dayIsHighlighted: () => false,\n    dayIsRangeStart: () => false,\n    dayIsRangeEnd: () => false,\n    getCellProps,\n    calendarDates,\n    setCalendarDates,\n    isPlaceholder,\n    clear,\n    setIsPlaceholder,\n    min,\n    max,\n    granularity,\n    timezone,\n    closeDialogOnSelection,\n  };\n}\n","import React, {\n  ComponentPropsWithoutRef,\n  Fragment,\n  MouseEvent,\n  useRef,\n} from 'react';\nimport {parseAbsolute, ZonedDateTime} from '@internationalized/date';\nimport {useController} from 'react-hook-form';\nimport {mergeProps} from '@react-aria/utils';\nimport {\n  DatePickerValueProps,\n  useDatePickerState,\n} from './use-date-picker-state';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {DateRangeIcon} from '@ui/icons/material/DateRange';\nimport {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {Calendar} from '../calendar/calendar';\nimport {\n  DatePickerField,\n  DatePickerFieldProps,\n} from '../date-range-picker/date-picker-field';\nimport {DateSegmentList} from '../segments/date-segment-list';\nimport {useDateFormatter} from '@ui/i18n/use-date-formatter';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport clsx from 'clsx';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {Button} from '@ui/buttons/button';\nimport {Trans} from '@ui/i18n/trans';\nimport {useCurrentDateTime} from '@ui/i18n/use-current-date-time';\nimport {useUserTimezone} from '@ui/i18n/use-user-timezone';\n\nexport interface DatePickerProps\n  extends Omit<DatePickerFieldProps, 'children'>,\n    DatePickerValueProps<ZonedDateTime> {}\nexport function DatePicker({showCalendarFooter, ...props}: DatePickerProps) {\n  const state = useDatePickerState(props);\n  const inputRef = useRef<HTMLDivElement>(null);\n  const now = useCurrentDateTime();\n\n  const footer = showCalendarFooter && (\n    <DialogFooter\n      padding=\"px-14 pb-14\"\n      startAction={\n        <Button\n          disabled={state.isPlaceholder}\n          variant=\"text\"\n          color=\"primary\"\n          onClick={() => {\n            state.clear();\n          }}\n        >\n          <Trans message=\"Clear\" />\n        </Button>\n      }\n    >\n      <Button\n        variant=\"text\"\n        color=\"primary\"\n        onClick={() => {\n          state.setSelectedValue(now);\n          state.setCalendarIsOpen(false);\n        }}\n      >\n        <Trans message=\"Today\" />\n      </Button>\n    </DialogFooter>\n  );\n\n  const dialog = (\n    <DialogTrigger\n      offset={8}\n      placement=\"bottom-start\"\n      isOpen={state.calendarIsOpen}\n      onOpenChange={state.setCalendarIsOpen}\n      type=\"popover\"\n      triggerRef={inputRef}\n      returnFocusToTrigger={false}\n      moveFocusToDialog={false}\n    >\n      <Dialog size=\"auto\">\n        <DialogBody\n          className=\"flex items-start gap-40\"\n          padding={showCalendarFooter ? 'px-24 pt-20 pb-10' : null}\n        >\n          <Calendar state={state} visibleMonths={1} />\n        </DialogBody>\n        {footer}\n      </Dialog>\n    </DialogTrigger>\n  );\n\n  const openOnClick: ComponentPropsWithoutRef<'div'> = {\n    onClick: e => {\n      e.stopPropagation();\n      e.preventDefault();\n      if (!isHourSegment(e)) {\n        state.setCalendarIsOpen(true);\n      } else {\n        state.setCalendarIsOpen(false);\n      }\n    },\n  };\n\n  return (\n    <Fragment>\n      <DatePickerField\n        ref={inputRef}\n        wrapperProps={openOnClick}\n        endAdornment={\n          <DateRangeIcon className={clsx(props.disabled && 'text-disabled')} />\n        }\n        {...props}\n      >\n        <DateSegmentList\n          segmentProps={openOnClick}\n          state={state}\n          value={state.selectedValue}\n          onChange={state.setSelectedValue}\n          isPlaceholder={state.isPlaceholder}\n        />\n      </DatePickerField>\n      {dialog}\n    </Fragment>\n  );\n}\n\ninterface FormDatePickerProps extends DatePickerProps {\n  name: string;\n}\nexport function FormDatePicker(props: FormDatePickerProps) {\n  const {min, max} = props;\n  const userTimezone = useUserTimezone();\n  const timezone = props.timezone || userTimezone;\n  const {trans} = useTrans();\n  const {format} = useDateFormatter({timeZone: timezone});\n  const {\n    field: {onChange, onBlur, value = null, ref},\n    fieldState: {invalid, error},\n  } = useController({\n    name: props.name,\n    rules: {\n      validate: v => {\n        if (!v) return;\n        const date = parseAbsolute(v, timezone);\n        if (min && date.compare(min) < 0) {\n          return trans({\n            message: 'Enter a date after :date',\n            values: {date: format(v)},\n          });\n        }\n        if (max && date.compare(max) > 0) {\n          return trans({\n            message: 'Enter a date before :date',\n            values: {date: format(v)},\n          });\n        }\n      },\n    },\n  });\n\n  const parsedValue: null | ZonedDateTime = value\n    ? parseAbsolute(value, timezone)\n    : null;\n\n  const formProps: Partial<DatePickerProps> = {\n    onChange: e => {\n      onChange(e ? e.toAbsoluteString() : e);\n    },\n    onBlur,\n    value: parsedValue,\n    invalid,\n    errorMessage: error?.message,\n    inputRef: ref,\n  };\n\n  return <DatePicker {...mergeProps(formProps, props)} />;\n}\n\nfunction isHourSegment(e: MouseEvent<HTMLDivElement>): boolean {\n  return ['hour', 'minute', 'dayPeriod'].includes(\n    (e.currentTarget as HTMLElement).ariaLabel || '',\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const FileUploadIcon = createSvgIcon(\n  <path d=\"M18 15v3H6v-3H4v3c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2v-3h-2zM7 9l1.41 1.41L11 7.83V16h2V7.83l2.59 2.58L17 9l-5-5-5 5z\" />\n, 'FileUploadOutlined');\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const DragHandleIcon = createSvgIcon(\n  <path d=\"M20 9H4v2h16V9zM4 15h16v-2H4v2z\" />\n, 'DragHandleOutlined');\n","import React, {ReactElement, useMemo} from 'react';\nimport {prettyBytes} from '@ui/utils/files/pretty-bytes';\nimport {Trans} from '@ui/i18n/trans';\nimport {FileUpload} from '@common/uploads/uploader/file-upload-store';\nimport {TrackUploadStatus} from '@app/admin/tracks-datatable-page/track-form/track-upload-progress';\nimport clsx from 'clsx';\n\ninterface Props {\n  fileUpload: FileUpload;\n  status: TrackUploadStatus;\n  className?: string;\n}\nexport function TrackUploadStatusText({fileUpload, status, className}: Props) {\n  const bytesUploaded = fileUpload?.bytesUploaded || 0;\n  const totalBytes = useMemo(\n    () => prettyBytes(fileUpload.file.size),\n    [fileUpload.file.size],\n  );\n  const uploadedBytes = useMemo(\n    () => prettyBytes(bytesUploaded),\n    [bytesUploaded],\n  );\n\n  let statusMessage: ReactElement;\n  if (status === 'completed') {\n    statusMessage = <Trans message=\"Upload complete\" />;\n  } else if (status === 'aborted') {\n    statusMessage = <Trans message=\"Upload cancelled\" />;\n  } else if (status === 'failed') {\n    statusMessage = <Trans message=\"Upload failed\" />;\n  } else if (status === 'processing') {\n    statusMessage = <Trans message=\"Processing upload...\" />;\n  } else if (status === 'pending') {\n    statusMessage = <Trans message=\"Waiting to start...\" />;\n  } else {\n    statusMessage = (\n      <Trans\n        message=\":bytesUploaded of :totalBytes uploaded\"\n        values={{\n          bytesUploaded: uploadedBytes,\n          totalBytes,\n        }}\n      />\n    );\n  }\n\n  return (\n    <div className={clsx('text-xs text-muted', className)}>{statusMessage}</div>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {UseFormReturn} from 'react-hook-form';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {Track} from '@app/web-player/tracks/track';\nimport {\n  CreateTrackPayload,\n  prepareTrackPayload,\n} from '@app/admin/tracks-datatable-page/requests/use-create-track';\n\nexport interface UpdateTrackResponse extends BackendResponse {\n  track: Track;\n}\n\nexport interface UpdateTrackPayload extends CreateTrackPayload {\n  id: number;\n}\n\nconst Endpoint = (id: number) => `tracks/${id}`;\n\ninterface Options {\n  onSuccess?: (response: UpdateTrackResponse) => void;\n}\n\nexport function useUpdateTrack(\n  form: UseFormReturn<UpdateTrackPayload>,\n  options: Options = {},\n) {\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: (payload: UpdateTrackPayload) => updateChannel(payload),\n    onSuccess: response => {\n      toast(trans(message('Track updated')));\n      queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey('tracks'),\n      });\n      options.onSuccess?.(response);\n    },\n    onError: err => onFormQueryError(err, form),\n  });\n}\n\nfunction updateChannel({\n  id,\n  ...payload\n}: UpdateTrackPayload): Promise<UpdateTrackResponse> {\n  return apiClient\n    .put(Endpoint(id), prepareTrackPayload(payload as CreateTrackPayload))\n    .then(r => r.data);\n}\n","import {useForm} from 'react-hook-form';\nimport {\n  UpdateTrackPayload,\n  UpdateTrackResponse,\n  useUpdateTrack,\n} from '@app/admin/tracks-datatable-page/requests/use-update-track';\nimport {Track} from '@app/web-player/tracks/track';\nimport {CreateTrackPayload} from '@app/admin/tracks-datatable-page/requests/use-create-track';\n\ninterface Options {\n  onTrackUpdated?: (response: UpdateTrackResponse) => void;\n}\n\nexport function useUpdateTrackForm(\n  track: UpdateTrackPayload | CreateTrackPayload | Omit<Track, 'lyric'>,\n  options: Options = {}\n) {\n  const form = useForm<UpdateTrackPayload>({\n    defaultValues: {\n      ...track,\n      image: track.image || (track as Track).album?.image,\n    },\n  });\n  const updateTrack = useUpdateTrack(form, {onSuccess: options.onTrackUpdated});\n  return {form, updateTrack};\n}\n","import {FileUpload} from '@common/uploads/uploader/file-upload-store';\nimport {ProgressBar} from '@ui/progress/progress-bar';\nimport React, {ComponentPropsWithoutRef, ReactElement} from 'react';\nimport {useFileUploadStore} from '@common/uploads/uploader/file-upload-provider';\nimport {message} from '@ui/i18n/message';\nimport {Tooltip} from '@ui/tooltip/tooltip';\nimport {MixedText} from '@ui/i18n/mixed-text';\nimport {ErrorIcon} from '@ui/icons/material/Error';\nimport {WarningIcon} from '@ui/icons/material/Warning';\nimport {CheckCircleIcon} from '@ui/icons/material/CheckCircle';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {CloseIcon} from '@ui/icons/material/Close';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {TrackUploadStatusText} from '@app/admin/tracks-datatable-page/track-form/track-upload-status-text';\n\nexport type TrackUploadStatus = FileUpload['status'] | 'processing' | undefined;\n\ninterface UploadProgressProps {\n  fileUpload: FileUpload;\n  status: TrackUploadStatus;\n  onAbort?: (uploadId: string) => void;\n  size?: 'sm' | 'md';\n  className?: string;\n}\nexport function TrackUploadProgress({\n  fileUpload,\n  status,\n  onAbort,\n  size = 'md',\n  className,\n}: UploadProgressProps) {\n  return (\n    <div className={className}>\n      <div className=\"flex items-center justify-between gap-24\">\n        <TrackUploadStatusText fileUpload={fileUpload} status={status} />\n        <UploadStatusButton\n          fileUpload={fileUpload}\n          status={status}\n          onAbort={onAbort}\n        />\n      </div>\n      <ProgressBar\n        size={size === 'sm' ? 'xs' : 'sm'}\n        radius=\"rounded-sm\"\n        value={fileUpload.percentage}\n        isIndeterminate={status === 'processing' || status === 'pending'}\n      />\n    </div>\n  );\n}\n\nfunction UploadStatusButton({\n  fileUpload,\n  status,\n  onAbort,\n}: UploadProgressProps) {\n  const abortUpload = useFileUploadStore(s => s.abortUpload);\n  const clearInactive = useFileUploadStore(s => s.clearInactive);\n  const errorMessage = fileUpload.errorMessage;\n\n  let statusButton: ReactElement;\n  if (status === 'failed') {\n    const errMessage =\n      errorMessage || message('This file could not be uploaded');\n    statusButton = (\n      <AnimatedStatus>\n        <Tooltip variant=\"danger\" label={<MixedText value={errMessage} />}>\n          <ErrorIcon className=\"text-danger\" size=\"sm\" />\n        </Tooltip>\n      </AnimatedStatus>\n    );\n  } else if (status === 'aborted') {\n    statusButton = (\n      <AnimatedStatus>\n        <WarningIcon className=\"text-warning\" size=\"sm\" />\n      </AnimatedStatus>\n    );\n  } else if (status === 'completed' || status === 'processing') {\n    statusButton = (\n      <AnimatedStatus>\n        <CheckCircleIcon size=\"sm\" className=\"text-primary\" />\n      </AnimatedStatus>\n    );\n  } else if (onAbort) {\n    statusButton = (\n      <AnimatedStatus>\n        <IconButton size=\"xs\" onClick={() => onAbort(fileUpload.file.id)}>\n          <CloseIcon />\n        </IconButton>\n      </AnimatedStatus>\n    );\n  } else {\n    // keep the spacing, even if status button is hidden\n    statusButton = <div className=\"h-30 w-30\" />;\n  }\n\n  return <AnimatePresence>{statusButton}</AnimatePresence>;\n}\n\ninterface AnimatedStatusProps\n  extends Omit<\n    ComponentPropsWithoutRef<'div'>,\n    'onAnimationStart' | 'onDragStart' | 'onDragEnd' | 'onDrag'\n  > {\n  children: ReactElement;\n}\nfunction AnimatedStatus({children, ...domProps}: AnimatedStatusProps) {\n  return (\n    <m.div\n      className=\"flex h-30 w-30 items-center justify-center\"\n      {...domProps}\n      initial={{scale: 0, opacity: 0}}\n      animate={{scale: 1, opacity: 1}}\n      exit={{scale: 0, opacity: 0}}\n    >\n      {children}\n    </m.div>\n  );\n}\n","import {TrackUploadStatus} from '@app/admin/tracks-datatable-page/track-form/track-upload-progress';\nimport {useFileUploadStore} from '@common/uploads/uploader/file-upload-provider';\nimport {TrackUploadMeta} from '@app/web-player/backstage/upload-page/use-track-uploader';\n\nexport function useTrackUpload(uploadId: string | undefined) {\n  const upload = useFileUploadStore(s =>\n    uploadId ? s.fileUploads.get(uploadId) : null\n  );\n\n  let isUploading = false;\n  let status: TrackUploadStatus;\n\n  if (upload) {\n    const meta = upload.meta as TrackUploadMeta | undefined;\n    const isProcessing = meta?.isExtractingMetadata || meta?.isGeneratingWave;\n\n    isUploading =\n      upload?.status === 'pending' ||\n      upload?.status === 'inProgress' ||\n      !!isProcessing;\n\n    status =\n      upload?.status === 'completed' && isProcessing\n        ? 'processing'\n        : upload?.status;\n  }\n\n  return {isUploading, status, activeUpload: upload};\n}\n","import React, {useState} from 'react';\nimport {Trans} from '@ui/i18n/trans';\nimport {Button} from '@ui/buttons/button';\nimport {FileUploadIcon} from '@ui/icons/material/FileUpload';\nimport {TrackUploadProgress} from '@app/admin/tracks-datatable-page/track-form/track-upload-progress';\nimport {useFormContext} from 'react-hook-form';\nimport {CreateTrackPayload} from '@app/admin/tracks-datatable-page/requests/use-create-track';\nimport {useTrackUploader} from '@app/web-player/backstage/upload-page/use-track-uploader';\nimport {useTrackUpload} from '@app/web-player/backstage/upload-page/use-track-upload';\nimport {useFileUploadStore} from '@common/uploads/uploader/file-upload-provider';\nimport {mergeTrackFormValues} from '@app/admin/tracks-datatable-page/requests/use-extract-track-file-metadata';\n\nexport function TrackFormUploadButton() {\n  const [uploadId, setUploadId] = useState<string>();\n  const {setValue, watch, getValues} = useFormContext<CreateTrackPayload>();\n  const {openFilePicker} = useTrackUploader({\n    onUploadStart: ({uploadId}) => setUploadId(uploadId),\n    onMetadataChange: (file, newData) => {\n      const mergedValues = mergeTrackFormValues(newData, getValues());\n      Object.entries(mergedValues).forEach(([key, value]) =>\n        setValue(key as keyof CreateTrackPayload, value, {shouldDirty: true}),\n      );\n    },\n  });\n  const {status, isUploading, activeUpload} = useTrackUpload(uploadId);\n  const abortUpload = useFileUploadStore(s => s.abortUpload);\n  const clearInactive = useFileUploadStore(s => s.clearInactive);\n  return (\n    <div>\n      <Button\n        className=\"w-full\"\n        variant=\"flat\"\n        color=\"primary\"\n        startIcon={<FileUploadIcon />}\n        disabled={isUploading}\n        onClick={() => openFilePicker()}\n      >\n        {watch('src') ? (\n          <Trans message=\"Replace file\" />\n        ) : (\n          <Trans message=\"Upload file\" />\n        )}\n      </Button>\n      {activeUpload && (\n        <TrackUploadProgress\n          fileUpload={activeUpload}\n          status={status}\n          className=\"mt-24\"\n          onAbort={uploadId => {\n            abortUpload(uploadId);\n            clearInactive();\n          }}\n        />\n      )}\n    </div>\n  );\n}\n","import React, {ReactNode} from 'react';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {Trans} from '@ui/i18n/trans';\nimport {FormImageSelector} from '@common/uploads/components/image-selector';\nimport {FormArtistPicker} from '@app/web-player/artists/artist-picker/form-artist-picker';\nimport {FormNormalizedModelChipField} from '@common/tags/form-normalized-model-chip-field';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {message} from '@ui/i18n/message';\nimport {TAG_MODEL} from '@common/tags/tag';\nimport {GENRE_MODEL} from '@app/web-player/genres/genre';\nimport {useFormContext} from 'react-hook-form';\nimport {CreateTrackPayload} from '@app/admin/tracks-datatable-page/requests/use-create-track';\nimport {FormattedDuration} from '@ui/i18n/formatted-duration';\nimport {useSettings} from '@ui/settings/use-settings';\nimport {TrackFormUploadButton} from '@app/admin/tracks-datatable-page/track-form/track-form-upload-button';\nimport {useIsMobileMediaQuery} from '@ui/utils/hooks/is-mobile-media-query';\nimport {FormNormalizedModelField} from '@common/ui/normalized-model/normalized-model-field';\n\ninterface TrackFormProps {\n  showExternalIdFields?: boolean;\n  showAlbumField?: boolean;\n  uploadButton?: ReactNode;\n}\nexport function TrackForm({\n  showExternalIdFields,\n  showAlbumField = true,\n  uploadButton,\n}: TrackFormProps) {\n  const {trans} = useTrans();\n  const isMobile = useIsMobileMediaQuery();\n\n  return (\n    <div className=\"gap-24 md:flex\">\n      <div className=\"flex-shrink-0\">\n        <FormImageSelector\n          name=\"image\"\n          diskPrefix=\"track_image\"\n          variant={isMobile ? 'input' : 'square'}\n          label={isMobile ? <Trans message=\"Image\" /> : null}\n          previewSize={isMobile ? undefined : 'w-full md:w-224 aspect-square'}\n          stretchPreview\n        />\n        <div className=\"mt-24\">\n          {uploadButton ? uploadButton : <TrackFormUploadButton />}\n        </div>\n      </div>\n      <div className=\"mt-24 flex-auto md:mt-0\">\n        <FormTextField\n          name=\"name\"\n          label={<Trans message=\"Name\" />}\n          className=\"mb-24\"\n          required\n          autoFocus\n        />\n        {showAlbumField && (\n          <FormNormalizedModelField\n            className=\"mb-24\"\n            label={<Trans message=\"Album\" />}\n            name=\"album_id\"\n            endpoint=\"search/suggestions/album\"\n          />\n        )}\n        <FormArtistPicker name=\"artists\" className=\"mb-24\" />\n        <FormNormalizedModelChipField\n          label={<Trans message=\"Genres\" />}\n          placeholder={trans(message('+Add genre'))}\n          model={GENRE_MODEL}\n          name=\"genres\"\n          allowCustomValue\n          className=\"mb-24\"\n        />\n        <FormNormalizedModelChipField\n          label={<Trans message=\"Tags\" />}\n          placeholder={trans(message('+Add tag'))}\n          model={TAG_MODEL}\n          name=\"tags\"\n          allowCustomValue\n          className=\"mb-24\"\n        />\n        <FormTextField\n          name=\"description\"\n          label={<Trans message=\"Description\" />}\n          inputElementType=\"textarea\"\n          rows={5}\n          className=\"mb-24\"\n        />\n        <DurationField />\n        {showExternalIdFields && <SourceField />}\n        {showExternalIdFields && <SpotifyIdField />}\n      </div>\n    </div>\n  );\n}\n\nfunction SourceField() {\n  return (\n    <FormTextField\n      name=\"src\"\n      label={<Trans message=\"Playback source\" />}\n      className=\"mb-24\"\n      minLength={1}\n      maxLength={230}\n      description={\n        <Trans message=\"Supports audio, video, hls/dash stream and youtube video url. If left empty, best matching youtube video will be found automatically.\" />\n      }\n    />\n  );\n}\n\nfunction SpotifyIdField() {\n  const {spotify_is_setup} = useSettings();\n  if (!spotify_is_setup) {\n    return null;\n  }\n  return (\n    <FormTextField\n      name=\"spotify_id\"\n      label={<Trans message=\"Spotify ID\" />}\n      className=\"mb-24\"\n      minLength={22}\n      maxLength={22}\n    />\n  );\n}\n\nfunction DurationField() {\n  const {watch} = useFormContext<CreateTrackPayload>();\n  return (\n    <FormTextField\n      required\n      name=\"duration\"\n      label={<Trans message=\"Duration (in milliseconds)\" />}\n      className=\"mb-24\"\n      type=\"number\"\n      min={1}\n      max={86400000}\n      description={\n        <Trans\n          message=\"Will appear on the site as: :preview\"\n          values={{preview: <FormattedDuration ms={watch('duration')} />}}\n        />\n      }\n    />\n  );\n}\n","import {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {Trans} from '@ui/i18n/trans';\nimport React from 'react';\nimport {useUpdateTrackForm} from '@app/admin/tracks-datatable-page/crupdate/use-update-track-form';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {TrackForm} from '@app/admin/tracks-datatable-page/track-form/track-form';\nimport {Form} from '@ui/forms/form';\nimport {Button} from '@ui/buttons/button';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {UpdateTrackPayload} from '@app/admin/tracks-datatable-page/requests/use-update-track';\nimport {CreateTrackPayload} from '@app/admin/tracks-datatable-page/requests/use-create-track';\n\ninterface Props {\n  track: UpdateTrackPayload | CreateTrackPayload;\n  hideAlbumField?: boolean;\n}\nexport function UpdateTrackDialog({track, hideAlbumField}: Props) {\n  const {formId, close} = useDialogContext();\n  const {form} = useUpdateTrackForm(track);\n  return (\n    <Dialog size=\"fullscreen\">\n      <DialogHeader>\n        <Trans message=\"Edit “:name“ track\" values={{name: track.name}} />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          id={formId}\n          form={form}\n          onSubmit={values => {\n            close(values);\n          }}\n          onBeforeSubmit={() => {\n            form.clearErrors();\n          }}\n        >\n          <TrackForm showExternalIdFields showAlbumField={!hideAlbumField} />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button variant=\"text\" onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button form={formId} variant=\"flat\" color=\"primary\" type=\"submit\">\n          <Trans message=\"Update\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","export default \"__VITE_ASSET__be0c7262__\"","import {useForm} from 'react-hook-form';\nimport {\n  CreateTrackPayload,\n  CreateTrackResponse,\n  useCreateTrack,\n} from '@app/admin/tracks-datatable-page/requests/use-create-track';\n\ninterface Props {\n  onTrackCreated?: (response: CreateTrackResponse) => void;\n  defaultValues?: Partial<CreateTrackPayload>;\n}\n\nexport function useCreateTrackForm({\n  onTrackCreated,\n  defaultValues,\n}: Props = {}) {\n  const form = useForm<CreateTrackPayload>({\n    defaultValues,\n  });\n  const createTrack = useCreateTrack(form, {onSuccess: onTrackCreated});\n  return {form, createTrack};\n}\n","import {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {Trans} from '@ui/i18n/trans';\nimport React from 'react';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {TrackForm} from '@app/admin/tracks-datatable-page/track-form/track-form';\nimport {Form} from '@ui/forms/form';\nimport {Button} from '@ui/buttons/button';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {useCreateTrackForm} from '@app/admin/tracks-datatable-page/crupdate/use-create-track-form';\nimport {CreateTrackPayload} from '@app/admin/tracks-datatable-page/requests/use-create-track';\n\ninterface Props {\n  defaultValues?: Partial<CreateTrackPayload>;\n  hideAlbumField?: boolean;\n}\nexport function CreateTrackDialog({defaultValues, hideAlbumField}: Props) {\n  const {formId, close} = useDialogContext();\n  const {form} = useCreateTrackForm({defaultValues});\n  return (\n    <Dialog size=\"fullscreen\">\n      <DialogHeader>\n        <Trans message=\"Add new track\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          id={formId}\n          form={form}\n          onSubmit={values => {\n            close(values);\n          }}\n          onBeforeSubmit={() => {\n            form.clearErrors();\n          }}\n        >\n          <TrackForm showExternalIdFields showAlbumField={!hideAlbumField} />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button variant=\"text\" onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button form={formId} variant=\"flat\" color=\"primary\" type=\"submit\">\n          <Trans message=\"Create\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {useFieldArray, useFormContext} from 'react-hook-form';\nimport {\n  CreateAlbumPayload,\n  CreateAlbumPayloadTrack,\n} from '@app/admin/albums-datatable-page/requests/use-create-album';\nimport React, {useRef} from 'react';\nimport {useFileUploadStore} from '@common/uploads/uploader/file-upload-provider';\nimport {Trans} from '@ui/i18n/trans';\nimport {Button} from '@ui/buttons/button';\nimport {FileUploadIcon} from '@ui/icons/material/FileUpload';\nimport {Tooltip} from '@ui/tooltip/tooltip';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {AddIcon} from '@ui/icons/material/Add';\nimport {DragHandleIcon} from '@ui/icons/material/DragHandle';\nimport {EditIcon} from '@ui/icons/material/Edit';\nimport {CloseIcon} from '@ui/icons/material/Close';\nimport {ProgressCircle} from '@ui/progress/progress-circle';\nimport {TrackUploadStatusText} from '@app/admin/tracks-datatable-page/track-form/track-upload-status-text';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {UpdateTrackDialog} from '@app/admin/tracks-datatable-page/track-form/update-track-dialog';\nimport {ConfirmationDialog} from '@ui/overlays/dialog/confirmation-dialog';\nimport musicImage from '@app/admin/tracks-datatable-page/music.svg';\nimport {IllustratedMessage} from '@ui/images/illustrated-message';\nimport {CreateTrackDialog} from '@app/admin/tracks-datatable-page/track-form/create-track-dialog';\nimport {DragPreviewRenderer} from '@ui/interactions/dnd/use-draggable';\nimport {DragPreview} from '@ui/interactions/dnd/drag-preview';\nimport {CreateTrackPayload} from '@app/admin/tracks-datatable-page/requests/use-create-track';\nimport {\n  hydrateAlbumForm,\n  mergeTrackFormValues,\n} from '@app/admin/tracks-datatable-page/requests/use-extract-track-file-metadata';\nimport {useTrackUploader} from '@app/web-player/backstage/upload-page/use-track-uploader';\nimport {useTrackUpload} from '@app/web-player/backstage/upload-page/use-track-upload';\nimport {UpdateTrackPayload} from '@app/admin/tracks-datatable-page/requests/use-update-track';\nimport {useSortable} from '@ui/interactions/dnd/sortable/use-sortable';\nimport {SvgImage} from '@ui/images/svg-image';\n\nexport function AlbumTracksForm() {\n  const form = useFormContext<CreateAlbumPayload>();\n  const {watch, setValue, getValues} = form;\n  const {fields, remove, prepend, move} = useFieldArray({\n    name: 'tracks',\n  });\n\n  const updateTrack = (\n    uploadId: string,\n    newValues: Partial<CreateTrackPayload>,\n  ) => {\n    const index = getValues('tracks')?.findIndex(f => f.uploadId === uploadId);\n    if (index != null) {\n      setValue(\n        `tracks.${index}`,\n        mergeTrackFormValues(newValues, getValues(`tracks.${index}`)),\n        {shouldDirty: true},\n      );\n    }\n  };\n\n  const {openFilePicker} = useTrackUploader({\n    onUploadStart: data =>\n      prepend(\n        // newly uploaded track should inherit album artists, genres and tags\n        mergeTrackFormValues(data, {\n          artists: form.getValues('artists'),\n          genres: form.getValues('genres'),\n          tags: form.getValues('tags'),\n        }),\n      ),\n    onMetadataChange: (file, newData) => {\n      hydrateAlbumForm(form, newData);\n      updateTrack(file.id, newData);\n    },\n  });\n\n  const tracks = watch('tracks') || [];\n\n  return (\n    <div>\n      <div className=\"flex items-center gap-12\">\n        <h2 className=\"my-24 text-xl font-semibold\">\n          <Trans message=\"Tracks\" />\n        </h2>\n        <Button\n          variant=\"outline\"\n          color=\"primary\"\n          size=\"xs\"\n          className=\"ml-auto\"\n          startIcon={<FileUploadIcon />}\n          onClick={() => openFilePicker()}\n        >\n          <Trans message=\"Upload tracks\" />\n        </Button>\n        <DialogTrigger\n          type=\"modal\"\n          onClose={newTrack => {\n            if (newTrack) {\n              prepend(newTrack);\n            }\n          }}\n        >\n          <Tooltip label={<Trans message=\"Create track\" />}>\n            <IconButton variant=\"outline\" color=\"primary\" size=\"xs\">\n              <AddIcon />\n            </IconButton>\n          </Tooltip>\n          <CreateTrackDialog\n            hideAlbumField\n            defaultValues={{\n              artists: watch('artists'),\n              tags: watch('tags'),\n              genres: watch('genres'),\n            }}\n          />\n        </DialogTrigger>\n      </div>\n      {fields.map((field, index) => {\n        const track = tracks[index];\n        return (\n          <TrackItem\n            key={field.id}\n            track={track}\n            onRemove={() => remove(index)}\n            onSort={(oldIndex, newIndex) => move(oldIndex, newIndex)}\n            tracks={tracks}\n            onUpdate={newValues => {\n              updateTrack(track.uploadId, newValues);\n            }}\n          />\n        );\n      })}\n\n      {!fields.length ? (\n        <IllustratedMessage\n          className=\"mt-40\"\n          image={<SvgImage src={musicImage} />}\n          title={<Trans message=\"This album does not have any tracks yet\" />}\n        />\n      ) : null}\n    </div>\n  );\n}\n\ninterface TrackItemProps {\n  track: CreateAlbumPayloadTrack;\n  tracks: CreateAlbumPayloadTrack[];\n  onRemove: () => void;\n  onUpdate: (updatedTrack: UpdateTrackPayload | CreateTrackPayload) => void;\n  onSort: (oldIndex: number, newIndex: number) => void;\n}\nfunction TrackItem({\n  track,\n  tracks,\n  onRemove,\n  onUpdate,\n  onSort,\n}: TrackItemProps) {\n  const ref = useRef<HTMLDivElement>(null);\n  const previewRef = useRef<DragPreviewRenderer>(null);\n\n  const abortUpload = useFileUploadStore(s => s.abortUpload);\n  const activeUpload = useFileUploadStore(s => {\n    return track.uploadId ? s.fileUploads.get(track.uploadId) : null;\n  });\n  const {isUploading, status} = useTrackUpload(track.uploadId);\n\n  const {sortableProps} = useSortable({\n    disabled: isUploading,\n    ref,\n    item: track,\n    items: tracks,\n    type: 'albumFormTrack',\n    preview: previewRef,\n    strategy: 'line',\n    onSortEnd: (oldIndex, newIndex) => {\n      onSort(oldIndex, newIndex);\n    },\n  });\n\n  return (\n    <div\n      className=\"border-b border-t border-t-transparent py-4\"\n      ref={ref}\n      {...sortableProps}\n    >\n      <div className=\"flex items-center text-sm\">\n        <IconButton className=\"mr-14 flex-shrink-0\" disabled={isUploading}>\n          <DragHandleIcon />\n        </IconButton>\n        <div className=\"flex-auto overflow-hidden overflow-ellipsis whitespace-nowrap\">\n          {track.name}\n        </div>\n        {activeUpload && (\n          <div className=\"mr-10 flex items-center\">\n            <TrackUploadStatusText\n              fileUpload={activeUpload}\n              status={status}\n              className=\"mr-10\"\n            />\n            <ProgressCircle\n              isIndeterminate={status === 'processing'}\n              value={activeUpload.percentage}\n              size=\"sm\"\n            />\n          </div>\n        )}\n        <DialogTrigger\n          type=\"modal\"\n          onClose={updatedTrack => {\n            if (updatedTrack) {\n              onUpdate(updatedTrack);\n            }\n          }}\n        >\n          <Tooltip label={<Trans message=\"Edit track\" />}>\n            <IconButton\n              className=\"ml-auto flex-shrink-0 text-muted\"\n              disabled={isUploading}\n            >\n              <EditIcon />\n            </IconButton>\n          </Tooltip>\n          <UpdateTrackDialog track={track} hideAlbumField={true} />\n        </DialogTrigger>\n        <DialogTrigger\n          type=\"modal\"\n          onClose={isConfirmed => {\n            if (isConfirmed) {\n              if (track.uploadId) {\n                abortUpload(track.uploadId);\n              }\n              onRemove();\n            }\n          }}\n        >\n          <Tooltip label={<Trans message=\"Remove track\" />}>\n            <IconButton className=\"flex-shrink-0 text-muted\">\n              <CloseIcon />\n            </IconButton>\n          </Tooltip>\n          <ConfirmationDialog\n            isDanger\n            title={<Trans message=\"Remove track\" />}\n            body={\n              <Trans message=\"Are you sure you want to remove this track from the album?\" />\n            }\n            confirm={<Trans message=\"Remove\" />}\n          />\n        </DialogTrigger>\n      </div>\n      <RowDragPreview track={track} ref={previewRef} />\n    </div>\n  );\n}\n\ninterface DragPreviewProps {\n  track: CreateTrackPayload;\n}\nconst RowDragPreview = React.forwardRef<DragPreviewRenderer, DragPreviewProps>(\n  ({track}, ref) => {\n    let content = track.name;\n    if (track.artists?.length) {\n      content += `- ${track.artists?.[0].name}`;\n    }\n    return (\n      <DragPreview ref={ref}>\n        {() => (\n          <div className=\"rounded bg-chip p-8 text-sm shadow\">{content}</div>\n        )}\n      </DragPreview>\n    );\n  },\n);\n","import React, {Fragment} from 'react';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {Trans} from '@ui/i18n/trans';\nimport {FormArtistPicker} from '@app/web-player/artists/artist-picker/form-artist-picker';\nimport {FormNormalizedModelChipField} from '@common/tags/form-normalized-model-chip-field';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {message} from '@ui/i18n/message';\nimport {TAG_MODEL} from '@common/tags/tag';\nimport {GENRE_MODEL} from '@app/web-player/genres/genre';\nimport {useSettings} from '@ui/settings/use-settings';\nimport {FormDatePicker} from '@ui/forms/input-field/date/date-picker/date-picker';\nimport {AlbumTracksForm} from '@app/admin/albums-datatable-page/album-form/album-tracks-form';\nimport {useIsMobileMediaQuery} from '@ui/utils/hooks/is-mobile-media-query';\nimport {FormImageSelector} from '@common/uploads/components/image-selector';\n\n// AlbumForm will be wrapped in FileUploadProvider by parent component\n\ninterface AlbumFormProps {\n  showExternalIdFields?: boolean;\n}\nexport function AlbumForm({showExternalIdFields}: AlbumFormProps) {\n  const {trans} = useTrans();\n  const isMobile = useIsMobileMediaQuery();\n  return (\n    <Fragment>\n      <div className=\"gap-24 md:flex\">\n        <div className=\"flex-shrink-0\">\n          <FormImageSelector\n            name=\"image\"\n            diskPrefix=\"album_images\"\n            label={isMobile ? <Trans message=\"Image\" /> : null}\n            variant={isMobile ? 'input' : 'square'}\n            previewSize=\"md:w-full md:w-224 md:aspect-square\"\n            stretchPreview\n          />\n        </div>\n        <div className=\"mt-24 flex-auto md:mt-0\">\n          <FormTextField\n            name=\"name\"\n            label={<Trans message=\"Name\" />}\n            className=\"mb-24\"\n            required\n            autoFocus\n          />\n          <FormDatePicker\n            name=\"release_date\"\n            label={<Trans message=\"Release date\" />}\n            className=\"mb-24\"\n            granularity=\"day\"\n          />\n          <FormArtistPicker name=\"artists\" className=\"mb-24\" />\n          <FormNormalizedModelChipField\n            label={<Trans message=\"Genres\" />}\n            placeholder={trans(message('+Add genre'))}\n            model={GENRE_MODEL}\n            name=\"genres\"\n            allowCustomValue\n            className=\"mb-24\"\n          />\n          <FormNormalizedModelChipField\n            label={<Trans message=\"Tags\" />}\n            placeholder={trans(message('+Add tag'))}\n            model={TAG_MODEL}\n            name=\"tags\"\n            allowCustomValue\n            className=\"mb-24\"\n          />\n          <FormTextField\n            name=\"description\"\n            label={<Trans message=\"Description\" />}\n            inputElementType=\"textarea\"\n            rows={5}\n            className=\"mb-24\"\n          />\n          {showExternalIdFields && <SpotifyIdField />}\n        </div>\n      </div>\n      <AlbumTracksForm />\n    </Fragment>\n  );\n}\n\nfunction SpotifyIdField() {\n  const {spotify_is_setup} = useSettings();\n  if (!spotify_is_setup) {\n    return null;\n  }\n  return (\n    <FormTextField\n      name=\"spotify_id\"\n      label={<Trans message=\"Spotify ID\" />}\n      className=\"mb-24\"\n      minLength={22}\n      maxLength={22}\n    />\n  );\n}\n","import {forwardRef, useImperativeHandle, useState} from 'react';\nimport {useForm} from 'react-hook-form';\nimport {\n  CreateAlbumPayload,\n  useCreateAlbum,\n} from '@app/admin/albums-datatable-page/requests/use-create-album';\nimport {useFileUploadStore} from '@common/uploads/uploader/file-upload-provider';\nimport {useTrackUploader} from '@app/web-player/backstage/upload-page/use-track-uploader';\nimport {\n  hydrateAlbumForm,\n  mergeTrackFormValues,\n} from '@app/admin/tracks-datatable-page/requests/use-extract-track-file-metadata';\nimport {Form} from '@ui/forms/form';\nimport {AlbumForm} from '@app/admin/albums-datatable-page/album-form/album-form';\nimport {Button} from '@ui/buttons/button';\nimport {Trans} from '@ui/i18n/trans';\nimport type {\n  UploaderActions,\n  UploaderProps,\n} from '@app/web-player/backstage/upload-page/upload-page';\nimport {usePrimaryArtistForCurrentUser} from '@app/web-player/backstage/use-primary-artist-for-current-user';\nimport {useCurrentDateTime} from '@ui/i18n/use-current-date-time';\n\nexport const AlbumUploader = forwardRef<UploaderActions, UploaderProps>(\n  ({onUploadStart, onCancel, onCreate}, ref) => {\n    const userArtist = usePrimaryArtistForCurrentUser();\n    const now = useCurrentDateTime();\n    const [isVisible, setIsVisible] = useState(false);\n    const form = useForm<CreateAlbumPayload>({\n      defaultValues: {\n        tracks: [],\n        artists: userArtist ? [userArtist] : [],\n        release_date: now.toAbsoluteString(),\n      },\n    });\n    const tracks = form.watch('tracks') || [];\n\n    const abortUpload = useFileUploadStore(s => s.abortUpload);\n    const uploadIsInProgress = !!useFileUploadStore(s => s.activeUploadsCount);\n    const {openFilePicker, uploadTracks, validateUploads} = useTrackUploader({\n      onUploadStart: data => {\n        setIsVisible(true);\n        form.setValue('tracks', [...form.getValues('tracks'), data]);\n        onUploadStart();\n      },\n      onMetadataChange: (file, newData) => {\n        hydrateAlbumForm(form, newData);\n        form.setValue(\n          'tracks',\n          form.getValues('tracks').map(track => {\n            return track.uploadId === file.id\n              ? mergeTrackFormValues(newData, track)\n              : track;\n          }),\n        );\n      },\n    });\n\n    useImperativeHandle(\n      ref,\n      () => ({\n        openFilePicker,\n        uploadTracks,\n        validateUploads,\n      }),\n      [openFilePicker, uploadTracks, validateUploads],\n    );\n\n    const createAlbum = useCreateAlbum(form);\n    return isVisible ? (\n      <Form\n        className=\"mb-30 rounded border bg-paper p-14 md:p-24\"\n        form={form}\n        onSubmit={newValues =>\n          createAlbum.mutate(newValues, {\n            onSuccess: response => {\n              setIsVisible(false);\n              form.reset();\n              onCreate(response.album);\n            },\n          })\n        }\n      >\n        <AlbumForm showExternalIdFields={false} />\n        <div className=\"mt-24\">\n          <Button\n            variant=\"text\"\n            onClick={() => {\n              tracks.forEach(track => {\n                abortUpload(track.uploadId);\n              });\n              form.reset();\n              setIsVisible(false);\n              onCancel();\n            }}\n            className=\"mr-10\"\n          >\n            <Trans message=\"Cancel\" />\n          </Button>\n          <Button\n            type=\"submit\"\n            variant=\"flat\"\n            color=\"primary\"\n            disabled={uploadIsInProgress || createAlbum.isPending}\n          >\n            <Trans message=\"Save\" />\n          </Button>\n        </div>\n      </Form>\n    ) : null;\n  },\n);\n","import {\n  forwardRef,\n  memo,\n  useEffect,\n  useImperativeHandle,\n  useState,\n} from 'react';\nimport {useFileUploadStore} from '@common/uploads/uploader/file-upload-provider';\nimport {\n  TrackUploadPayload,\n  useTrackUploader,\n} from '@app/web-player/backstage/upload-page/use-track-uploader';\nimport {mergeTrackFormValues} from '@app/admin/tracks-datatable-page/requests/use-extract-track-file-metadata';\nimport {\n  UploaderActions,\n  UploaderProps,\n} from '@app/web-player/backstage/upload-page/upload-page';\nimport {Track} from '@app/web-player/tracks/track';\nimport {useForm} from 'react-hook-form';\nimport {useCreateTrack} from '@app/admin/tracks-datatable-page/requests/use-create-track';\nimport {useTrackUpload} from '@app/web-player/backstage/upload-page/use-track-upload';\nimport {TrackUploadProgress} from '@app/admin/tracks-datatable-page/track-form/track-upload-progress';\nimport {Form} from '@ui/forms/form';\nimport {TrackForm} from '@app/admin/tracks-datatable-page/track-form/track-form';\nimport {Button} from '@ui/buttons/button';\nimport {Trans} from '@ui/i18n/trans';\nimport {usePrimaryArtistForCurrentUser} from '@app/web-player/backstage/use-primary-artist-for-current-user';\n\nexport const TracksUploader = forwardRef<UploaderActions, UploaderProps>(\n  ({onUploadStart, onCancel, onCreate}, ref) => {\n    const userArtist = usePrimaryArtistForCurrentUser();\n    const abortUpload = useFileUploadStore(s => s.abortUpload);\n    const [tracks, setTracks] = useState<TrackUploadPayload[]>([]);\n\n    const {openFilePicker, uploadTracks, validateUploads} = useTrackUploader({\n      onUploadStart: data => {\n        setTracks(prev => {\n          if (userArtist) {\n            return [...prev, {...data, artists: [userArtist]}];\n          }\n          return [...prev, data];\n        });\n        onUploadStart();\n      },\n      onMetadataChange: (file, newData) => {\n        setTracks(allTracks => {\n          return allTracks.map(track => {\n            return track.uploadId === file.id\n              ? mergeTrackFormValues(newData, track)\n              : track;\n          });\n        });\n      },\n    });\n\n    useImperativeHandle(\n      ref,\n      () => ({\n        openFilePicker,\n        uploadTracks,\n        validateUploads,\n      }),\n      [openFilePicker, uploadTracks, validateUploads],\n    );\n\n    return (\n      <div className=\"w-full\">\n        {tracks.map(track => (\n          <TrackUploadItem\n            key={track.uploadId}\n            track={track}\n            onCreate={createdTrack => {\n              // hide upload form for this track\n              setTracks(prev =>\n                prev.filter(t => t.uploadId !== track.uploadId),\n              );\n              onCreate(createdTrack);\n            }}\n            onRemove={() => {\n              setTracks(prev => {\n                const newTracks = prev.filter(\n                  t => t.uploadId !== track.uploadId,\n                );\n                // only invoke \"onCancel\" if every uploaded track has been removed, so upload mode can be unlocked\n                if (!newTracks.length) {\n                  onCancel();\n                }\n                return newTracks;\n              });\n              abortUpload(track.uploadId);\n            }}\n          />\n        ))}\n      </div>\n    );\n  },\n);\n\ninterface TrackUploadItemProps {\n  track: TrackUploadPayload;\n  onRemove: () => void;\n  onCreate: (track: Track) => void;\n}\nconst TrackUploadItem = memo(\n  ({track, onRemove, onCreate}: TrackUploadItemProps) => {\n    const form = useForm<TrackUploadPayload>({\n      defaultValues: track,\n    });\n    const createTrack = useCreateTrack(form);\n    const activeUpload = useFileUploadStore(s =>\n      s.fileUploads.get(track.uploadId),\n    );\n    const {isUploading, status} = useTrackUpload(track.uploadId);\n\n    useEffect(() => {\n      form.reset(track);\n    }, [track, form]);\n\n    const uploadProgress =\n      isUploading && activeUpload ? (\n        <TrackUploadProgress fileUpload={activeUpload} status={status} />\n      ) : null;\n\n    return (\n      <Form\n        form={form}\n        onSubmit={values => {\n          createTrack.mutate(values, {\n            onSuccess: response => onCreate(response.track),\n          });\n        }}\n        className=\"mb-30 rounded border bg-paper p-14 md:p-24\"\n      >\n        <TrackForm uploadButton={uploadProgress} showExternalIdFields={false} />\n        <Button variant=\"text\" onClick={() => onRemove()} className=\"mr-10\">\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          type=\"submit\"\n          variant=\"flat\"\n          color=\"primary\"\n          disabled={createTrack.isPending || !form.watch('src')}\n        >\n          <Trans message=\"Save\" />\n        </Button>\n      </Form>\n    );\n  },\n);\n","export default \"__VITE_ASSET__19ef062e__\"","import {Track} from '@app/web-player/tracks/track';\nimport {Album, ALBUM_MODEL} from '@app/web-player/albums/album';\nimport {TrackImage} from '@app/web-player/tracks/track-image/track-image';\nimport {AlbumImage} from '@app/web-player/albums/album-image/album-image';\nimport {ArtistLinks} from '@app/web-player/artists/artist-links';\nimport {ChipList} from '@ui/forms/input-field/chip-field/chip-list';\nimport {Chip} from '@ui/forms/input-field/chip-field/chip';\nimport {Trans} from '@ui/i18n/trans';\nimport {Link} from 'react-router';\nimport {getTrackLink} from '@app/web-player/tracks/track-link';\nimport {getAlbumLink} from '@app/web-player/albums/album-link';\nimport {LinkStyle} from '@ui/buttons/external-link';\nimport {TextField} from '@ui/forms/input-field/text-field/text-field';\nimport clsx from 'clsx';\nimport albumBorderImage from './album-border.png';\nimport {ShareMediaButtons} from '@app/web-player/sharing/share-media-buttons';\n\ninterface UploadedMediaPreviewProps {\n  media: Track | Album;\n}\nexport function UploadedMediaPreview({media}: UploadedMediaPreviewProps) {\n  const isAlbum = media.model_type === ALBUM_MODEL;\n  const absoluteLink = isAlbum\n    ? getAlbumLink(media, {absolute: true})\n    : getTrackLink(media, {absolute: true});\n\n  return (\n    <div className=\"mx-auto my-20 flex w-780 max-w-full items-center gap-28 rounded border bg-paper p-20\">\n      <div className={clsx(isAlbum && 'relative isolate mx-18 my-14')}>\n        {isAlbum ? (\n          <AlbumImage\n            album={media}\n            className=\"relative z-20 flex-shrink-0 rounded\"\n            size=\"w-132 h-132\"\n          />\n        ) : (\n          <TrackImage\n            track={media}\n            className=\"relative z-20 flex-shrink-0 rounded\"\n            size=\"w-132 h-132\"\n          />\n        )}\n        {isAlbum && (\n          <img\n            className=\"absolute -left-14 -top-14 z-10 block h-160 w-160 max-w-160\"\n            src={albumBorderImage}\n            alt=\"\"\n          />\n        )}\n      </div>\n      <div className=\"flex-auto\">\n        <div className=\"text-base font-bold\">{media.name}</div>\n        <div className=\"mb-14 text-sm text-muted\">\n          <ArtistLinks artists={media.artists} />\n        </div>\n        {media.genres?.length ? (\n          <ChipList selectable={false} size=\"sm\" className=\"mb-14\">\n            {media.genres?.map(genre => {\n              return (\n                <Chip key={genre.id}>{genre.display_name || genre.name}</Chip>\n              );\n            })}\n          </ChipList>\n        ) : null}\n        <div className=\"text-sm\">\n          <Trans\n            message=\"Upload complete. <a>Go to your track</a>\"\n            values={{\n              a: parts => (\n                <Link\n                  className={LinkStyle}\n                  to={isAlbum ? getAlbumLink(media) : getTrackLink(media)}\n                >\n                  {parts}\n                </Link>\n              ),\n            }}\n          />\n        </div>\n      </div>\n      <div className=\"max-w-300 ml-auto flex-auto\">\n        <div className=\"text-sm text-muted\">\n          <Trans message=\"Share your new track\" />\n          <ShareMediaButtons\n            name={media.name}\n            image={media.image}\n            link={absoluteLink}\n          />\n          <TextField\n            value={absoluteLink}\n            readOnly\n            className=\"mt-24 w-full\"\n            size=\"sm\"\n            onClick={e => {\n              (e.target as HTMLInputElement).select();\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import {opacityAnimation} from '@ui/animation/opacity-animation';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {Trans} from '@ui/i18n/trans';\n\ninterface DropTargetMaskProps {\n  isVisible: boolean;\n}\nexport function DropTargetMask({isVisible}: DropTargetMaskProps) {\n  const mask = (\n    <m.div\n      key=\"dragTargetMask\"\n      {...opacityAnimation}\n      transition={{duration: 0.3}}\n      className=\"pointer-events-none absolute inset-0 min-h-full w-full border-2 border-dashed border-primary bg-primary-light/30\"\n    >\n      <m.div\n        initial={{y: '100%', opacity: 0}}\n        animate={{y: '-10px', opacity: 1}}\n        exit={{y: '100%', opacity: 0}}\n        className=\"fixed bottom-0 left-0 right-0 mx-auto max-w-max rounded bg-primary p-10 text-on-primary\"\n      >\n        <Trans message=\"Drop your files anywhere on the page to upload\" />\n      </m.div>\n    </m.div>\n  );\n  return <AnimatePresence>{isVisible ? mask : null}</AnimatePresence>;\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {useAuth} from '@common/auth/use-auth';\nimport {getBootstrapData} from '@ui/bootstrap-data/bootstrap-data-store';\n\ninterface Response extends BackendResponse {\n  minutesLeft: number | null;\n}\n\nexport function resetMinutesLimitQuery() {\n  const {user} = getBootstrapData();\n  if (user?.id) {\n    queryClient.resetQueries({queryKey: ['minutesLimit', user.id]});\n  }\n}\n\nexport function useUserMinutesLimit() {\n  const {user} = useAuth();\n  const userId = user?.id!;\n  return useQuery({\n    queryKey: ['minutesLimit', userId],\n    queryFn: () => fetchLimit(userId),\n    enabled: userId != null,\n  });\n}\n\nfunction fetchLimit(userId: number): Promise<Response> {\n  return apiClient\n    .get(`users/${userId}/minutes-left`)\n    .then(response => response.data);\n}\n","import {Trans} from '@ui/i18n/trans';\nimport {Button} from '@ui/buttons/button';\nimport {Switch} from '@ui/forms/toggle/switch';\nimport {ComponentPropsWithoutRef, ReactNode, useRef, useState} from 'react';\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\nimport {Link} from 'react-router';\nimport {LinkStyle} from '@ui/buttons/external-link';\nimport {Track} from '@app/web-player/tracks/track';\nimport {Album} from '@app/web-player/albums/album';\nimport {AlbumUploader} from '@app/web-player/backstage/upload-page/album-uploader';\nimport {TracksUploader} from '@app/web-player/backstage/upload-page/tracks-uploader';\nimport {UploadedMediaPreview} from '@app/web-player/backstage/upload-page/uploaded-media-preview';\nimport {\n  NativeFileDraggable,\n  useDroppable,\n} from '@ui/interactions/dnd/use-droppable';\nimport {DropTargetMask} from '@app/web-player/backstage/upload-page/drop-tarket-mask';\nimport {useTrackUploader} from '@app/web-player/backstage/upload-page/use-track-uploader';\nimport {\n  resetMinutesLimitQuery,\n  useUserMinutesLimit,\n} from '@app/web-player/backstage/upload-page/use-user-minutes-limit';\nimport {BackstageLayout} from '@app/web-player/backstage/backstage-layout';\n\ntype UploadMode = 'album' | 'tracks';\n\nexport interface UploaderProps {\n  onUploadStart: () => void;\n  onCancel: () => void;\n  onCreate: (item: Track | Album) => void;\n}\n\nexport type UploaderActions = ReturnType<typeof useTrackUploader>;\n\ninterface Props {\n  backstageLayout?: boolean;\n}\nexport function UploadPage({backstageLayout = false}: Props) {\n  return (\n    <FileUploadProvider>\n      <Content backstageLayout={backstageLayout} />\n    </FileUploadProvider>\n  );\n}\n\nfunction Content({backstageLayout}: Props) {\n  const [uploadMode, setUploadMode] = useState<UploadMode>('tracks');\n  const [modeIsLocked, setModeIsLocked] = useState(false);\n\n  const uploaderRef = useRef<UploaderActions>(null);\n  const Uploader = uploadMode === 'tracks' ? TracksUploader : AlbumUploader;\n\n  const [createdItems, setCreatedItems] = useState<(Album | Track)[]>([]);\n\n  const ref = useRef<HTMLDivElement>(null);\n  const [isDragOver, setIsDragOver] = useState(false);\n  const {droppableProps} = useDroppable({\n    id: 'uploadPageRoot',\n    ref,\n    types: ['nativeFile'],\n    onDragEnter: () => setIsDragOver(true),\n    onDragLeave: () => setIsDragOver(false),\n    onDrop: async draggable => {\n      if (draggable.type === 'nativeFile') {\n        const files = await (draggable as NativeFileDraggable).getData();\n        const validFiles = uploaderRef.current?.validateUploads(files);\n        if (validFiles?.length) {\n          uploaderRef.current?.uploadTracks(validFiles);\n        }\n      }\n    },\n  });\n\n  const Wrapper = backstageLayout ? BackstageLayout : DefaultWrapper;\n\n  return (\n    <Wrapper {...droppableProps}>\n      {!modeIsLocked && (\n        <UploadPanel\n          onUpload={() => uploaderRef.current?.openFilePicker()}\n          uploadMode={uploadMode}\n          onUploadModeChange={setUploadMode}\n        />\n      )}\n      {createdItems.map(item => (\n        <UploadedMediaPreview key={item.id} media={item} />\n      ))}\n      <Uploader\n        ref={uploaderRef}\n        onUploadStart={() => setModeIsLocked(true)}\n        onCreate={item => {\n          setCreatedItems(prev => [...prev, item]);\n          resetMinutesLimitQuery();\n        }}\n        onCancel={() => {\n          setModeIsLocked(false);\n        }}\n      />\n      <DropTargetMask isVisible={isDragOver} />\n    </Wrapper>\n  );\n}\n\ninterface UploadPanelProps {\n  onUpload: () => void;\n  uploadMode: UploadMode;\n  onUploadModeChange: (newMode: UploadMode) => void;\n}\nfunction UploadPanel({\n  onUpload,\n  uploadMode,\n  onUploadModeChange,\n}: UploadPanelProps) {\n  const {data} = useUserMinutesLimit();\n  return (\n    <div className=\"pt-40\">\n      <div className=\"mx-auto flex max-w-580 flex-col items-center rounded border bg-paper p-20 md:p-48\">\n        <h1 className=\"text-base md:text-[22px] md:font-light\">\n          <Trans message=\"Drag and drop your tracks, videos & albums here.\" />\n        </h1>\n        <Button\n          variant=\"flat\"\n          color=\"primary\"\n          className=\"mt-20 w-min\"\n          onClick={() => onUpload()}\n        >\n          <Trans message=\"Or choose files to upload\" />\n        </Button>\n        <div className=\"mt-20 border-t pt-20\">\n          <Switch\n            checked={uploadMode === 'album'}\n            onChange={e =>\n              onUploadModeChange(e.target.checked ? 'album' : 'tracks')\n            }\n          >\n            <Trans message=\"Make an album when multiple files are selected\" />\n          </Switch>\n        </div>\n      </div>\n      <div className=\"mt-20 min-h-20 text-center text-sm text-muted\">\n        {data?.minutesLeft != null && (\n          <Trans\n            message=\"You have :count minutes left. Try <a>Pro accounts</a> to get more time and access to advanced features.\"\n            values={{\n              count: data.minutesLeft,\n              a: parts => (\n                <Link className={LinkStyle} to=\"/pricing\">\n                  {parts}\n                </Link>\n              ),\n            }}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\ninterface DefaultWrapperProps extends ComponentPropsWithoutRef<'div'> {\n  children: ReactNode;\n}\nfunction DefaultWrapper({children, ...domProps}: DefaultWrapperProps) {\n  return (\n    <div {...domProps} className=\"relative min-h-full\">\n      <div className=\"container mx-auto p-14 md:p-24\">{children}</div>\n    </div>\n  );\n}\n\nexport function BackstageUploadPage() {\n  return <UploadPage backstageLayout />;\n}\n","import {Trans} from '@ui/i18n/trans';\nimport React, {cloneElement, Fragment, ReactElement, useState} from 'react';\nimport {DateRangeValue} from '@ui/forms/input-field/date/date-range-picker/date-range-value';\nimport {DateRangePresets} from '@ui/forms/input-field/date/date-range-picker/dialog/date-range-presets';\nimport {ReportDateSelector} from '@common/admin/analytics/report-date-selector';\nimport {StaticPageTitle} from '@common/seo/static-page-title';\nimport {InsightsReportChartsProps} from '@app/admin/reports/insights-report-charts';\nimport {Navbar} from '@common/ui/navigation/navbar/navbar';\nimport {Footer} from '@common/ui/footer/footer';\nimport {Skeleton} from '@ui/skeleton/skeleton';\n\ninterface Props {\n  children: ReactElement<InsightsReportChartsProps>;\n  reportModel: string;\n  title?: ReactElement;\n  isNested?: boolean;\n}\nexport function BackstageInsightsLayout({\n  children,\n  reportModel,\n  title,\n  isNested,\n}: Props) {\n  const [dateRange, setDateRange] = useState<DateRangeValue>(() => {\n    // This week\n    return DateRangePresets[2].getRangeValue();\n  });\n  return (\n    <Fragment>\n      <StaticPageTitle>\n        <Trans message=\"Insights\" />\n      </StaticPageTitle>\n      <div className=\"flex h-full flex-col\">\n        {!isNested && (\n          <Navbar className=\"flex-shrink-0\" color=\"bg\" darkModeColor=\"bg\" />\n        )}\n        <div className=\"relative flex-auto overflow-y-auto bg-cover\">\n          <div className=\"mx-auto flex min-h-full max-w-[1600px] flex-col overflow-x-hidden p-12 md:p-24\">\n            <div className=\"flex-auto\">\n              <div className=\"mb-38 mt-14 h-48 items-center justify-between gap-24 md:flex\">\n                {title ? title : <Skeleton className=\"max-w-320\" />}\n                <div className=\"flex flex-shrink-0 items-center justify-between gap-10 md:gap-24\">\n                  <ReportDateSelector\n                    value={dateRange}\n                    onChange={setDateRange}\n                  />\n                </div>\n              </div>\n              {cloneElement(children, {dateRange, model: reportModel})}\n            </div>\n            {!isNested && <Footer />}\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n","import {keepPreviousData, useQuery} from '@tanstack/react-query';\nimport {DateRangeValue} from '@ui/forms/input-field/date/date-range-picker/date-range-value';\nimport {apiClient} from '@common/http/query-client';\nimport {\n  DatasetItem,\n  LocationDatasetItem,\n  ReportMetric,\n} from '@common/admin/analytics/report-metric';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {Track} from '@app/web-player/tracks/track';\nimport {User} from '@ui/types/user';\nimport {Artist} from '@app/web-player/artists/artist';\nimport {Album} from '@app/web-player/albums/album';\n\nconst endpoint = 'reports/insights';\n\nexport interface TopModelDatasetItem extends DatasetItem {\n  model: Artist | Album | Track | User;\n}\n\nexport interface FetchInsightsReportResponse extends BackendResponse {\n  report: {\n    totalClicks: number;\n    plays: ReportMetric;\n    browsers: ReportMetric;\n    locations: ReportMetric<LocationDatasetItem>;\n    devices: ReportMetric;\n    platforms: ReportMetric;\n    tracks: ReportMetric<TopModelDatasetItem>;\n    artists: ReportMetric<TopModelDatasetItem>;\n    albums: ReportMetric<TopModelDatasetItem>;\n    users: ReportMetric<TopModelDatasetItem>;\n  };\n}\n\nexport type InsightsReportMetric =\n  | 'plays'\n  | 'devices'\n  | 'browsers'\n  | 'platforms'\n  | 'locations'\n  | 'tracks'\n  | 'artists'\n  | 'albums'\n  | 'users';\n\ninterface Payload {\n  dateRange: DateRangeValue;\n  model?: string;\n  metrics?: InsightsReportMetric[];\n}\n\ninterface Options {\n  isEnabled: boolean;\n}\n\nexport function useInsightsReport(payload: Payload, options: Options) {\n  return useQuery({\n    queryKey: [endpoint, payload],\n    queryFn: () => fetchReport(endpoint, payload),\n    placeholderData: options.isEnabled ? keepPreviousData : undefined,\n    enabled: options.isEnabled,\n  });\n}\n\nfunction fetchReport<\n  T extends FetchInsightsReportResponse = FetchInsightsReportResponse,\n>(endpoint: string, payload: Payload): Promise<T> {\n  const params: Record<string, any> = {\n    model: payload.model,\n    metrics: payload.metrics?.join(','),\n  };\n  params.startDate = payload.dateRange.start.toAbsoluteString();\n  params.endDate = payload.dateRange.end.toAbsoluteString();\n  params.timezone = payload.dateRange.start.timeZone;\n\n  return apiClient.get(endpoint, {params}).then(response => response.data);\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const InfoIcon = createSvgIcon(\n  <path d=\"M11 7h2v2h-2zm0 4h2v6h-2zm1-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\" />\n, 'InfoOutlined');\n","import {Trans} from '@ui/i18n/trans';\nimport {ChartLayout, ChartLayoutProps} from '@common/charts/chart-layout';\nimport React, {Fragment, ReactElement} from 'react';\nimport {ReportMetric} from '@common/admin/analytics/report-metric';\nimport {ChartLoadingIndicator} from '@common/charts/chart-loading-indicator';\nimport {TopModelDatasetItem} from '@app/admin/reports/requests/use-insights-report';\nimport {PlayArrowFilledIcon} from '@app/web-player/tracks/play-arrow-filled';\nimport {InfoIcon} from '@ui/icons/material/Info';\nimport {FormattedNumber} from '@ui/i18n/formatted-number';\nimport {Link, useLocation} from 'react-router';\nimport {SmallArtistImage} from '@app/web-player/artists/artist-image/small-artist-image';\nimport {ArtistLink} from '@app/web-player/artists/artist-link';\nimport {AlbumImage} from '@app/web-player/albums/album-image/album-image';\nimport {TrackImage} from '@app/web-player/tracks/track-image/track-image';\nimport {AlbumLink} from '@app/web-player/albums/album-link';\nimport {TrackLink} from '@app/web-player/tracks/track-link';\nimport {ArtistLinks} from '@app/web-player/artists/artist-links';\nimport {UserProfileLink} from '@app/web-player/users/user-profile-link';\nimport {UserAvatar} from '@common/auth/user-avatar';\n\ninterface Props extends Partial<ChartLayoutProps> {\n  data?: ReportMetric<TopModelDatasetItem>;\n  title: ReactElement;\n}\nexport function TopModelsChartLayout({data, isLoading, ...layoutProps}: Props) {\n  const dataItems = data?.datasets[0].data || [];\n\n  return (\n    <ChartLayout\n      {...layoutProps}\n      contentIsFlex={isLoading}\n      className=\"col-span-6 row-span-11 overflow-y-auto overflow-x-hidden\"\n    >\n      {isLoading && <ChartLoadingIndicator />}\n      {dataItems.map(item => (\n        <div\n          key={item.model.id}\n          className=\"mb-20 flex items-center justify-between gap-24 text-sm\"\n        >\n          <div className=\"flex items-center gap-8\">\n            <Image\n              model={item.model}\n              size=\"w-42 h-42\"\n              className=\"flex-shrink-0 rounded\"\n            />\n            <div>\n              <div className=\"text-sm\">\n                <Name model={item.model} />\n              </div>\n              <div className=\"text-xs text-muted\">\n                <Description model={item.model} />\n              </div>\n            </div>\n          </div>\n          <div className=\"flex flex-shrink-0 items-center gap-4\">\n            <PlayArrowFilledIcon className=\"text-muted\" size=\"sm\" />\n            <Trans\n              message=\":count plays\"\n              values={{count: <FormattedNumber value={item.value} />}}\n            />\n          </div>\n        </div>\n      ))}\n      {!isLoading && !dataItems.length ? (\n        <div className=\"flex items-center gap-8 text-muted\">\n          <InfoIcon size=\"sm\" />\n          <Trans message=\"No plays in selected timeframe.\" />\n        </div>\n      ) : null}\n    </ChartLayout>\n  );\n}\n\ninterface ImageProps {\n  model: TopModelDatasetItem['model'];\n  size: string;\n  className: string;\n}\nfunction Image({model, size, className}: ImageProps) {\n  const {pathname} = useLocation();\n  const inAdmin = pathname.includes('/admin');\n  const link = inAdmin\n    ? `/admin/${model.model_type}s/${model.id}/insights`\n    : `/backstage/${model.model_type}s/${model.id}/insights`;\n\n  switch (model.model_type) {\n    case 'artist':\n      return (\n        <Link to={link}>\n          <SmallArtistImage artist={model} size={size} className={className} />\n        </Link>\n      );\n    case 'album':\n      return (\n        <Link to={link}>\n          <AlbumImage album={model} size={size} className={className} />\n        </Link>\n      );\n    case 'track':\n      return (\n        <Link to={link}>\n          <TrackImage track={model} size={size} className={className} />\n        </Link>\n      );\n    case 'user':\n      // there's no separate insights page for user\n      return <UserAvatar user={model} size={size} className={className} />;\n  }\n}\n\ninterface NameProps {\n  model: TopModelDatasetItem['model'];\n}\nfunction Name({model}: NameProps) {\n  switch (model.model_type) {\n    case 'artist':\n      return <ArtistLink artist={model} target=\"_blank\" />;\n    case 'album':\n      return <AlbumLink album={model} target=\"_blank\" />;\n    case 'track':\n      return <TrackLink track={model} target=\"_blank\" />;\n    case 'user':\n      return model.id ? (\n        <UserProfileLink user={model} target=\"_blank\" />\n      ) : (\n        <Fragment>{model.name}</Fragment>\n      );\n  }\n}\n\ninterface DescriptionProps {\n  model: TopModelDatasetItem['model'];\n}\nfunction Description({model}: DescriptionProps) {\n  switch (model.model_type) {\n    case 'artist':\n    case 'user':\n      return null;\n    case 'album':\n    case 'track':\n      return <ArtistLinks artists={model.artists} target=\"_blank\" />;\n  }\n}\n","import React, {\n  cloneElement,\n  Fragment,\n  ReactElement,\n  useCallback,\n  useRef,\n  useState,\n} from 'react';\nimport {LineChart} from '@common/charts/line-chart';\nimport {Trans} from '@ui/i18n/trans';\nimport {FormattedNumber} from '@ui/i18n/formatted-number';\nimport {PolarAreaChart} from '@common/charts/polar-area-chart';\nimport {GeoChart} from '@common/admin/analytics/geo-chart/geo-chart';\nimport {BaseChartProps} from '@common/charts/base-chart';\nimport {DateRangeValue} from '@ui/forms/input-field/date/date-range-picker/date-range-value';\nimport {UseQueryResult} from '@tanstack/react-query';\nimport {\n  FetchInsightsReportResponse,\n  InsightsReportMetric,\n  useInsightsReport,\n} from '@app/admin/reports/requests/use-insights-report';\nimport {TopModelsChartLayout} from '@app/admin/reports/top-models-chart-layout';\n\nexport interface InsightsReportChartsProps {\n  showTracks?: boolean;\n  showArtistsAndAlbums?: boolean;\n  dateRange?: DateRangeValue;\n  model?: string;\n}\nexport function InsightsReportCharts(props: InsightsReportChartsProps) {\n  // will be set via \"cloneElement\"\n  const model = props.model as string;\n  const dateRange = props.dateRange as DateRangeValue;\n\n  return (\n    <div className=\"chart-grid\">\n      <AsyncChart metric=\"plays\" model={model} dateRange={dateRange}>\n        {({data}) => (\n          <LineChart\n            colSpan=\"col-span-8\"\n            title={<Trans message=\"Plays\" />}\n            hideLegend\n            description={\n              <Trans\n                message=\":count total plays\"\n                values={{\n                  count: (\n                    <FormattedNumber value={data?.report.plays.total || 0} />\n                  ),\n                }}\n              />\n            }\n          />\n        )}\n      </AsyncChart>\n      <AsyncChart metric=\"devices\" model={model} dateRange={dateRange}>\n        <PolarAreaChart\n          colSpan=\"col-span-4\"\n          title={<Trans message=\"Top devices\" />}\n        />\n      </AsyncChart>\n      {props.showTracks && (\n        <AsyncChart metric=\"tracks\" model={model} dateRange={dateRange}>\n          <TopModelsChartLayout\n            title={<Trans message=\"Most played tracks\" />}\n          />\n        </AsyncChart>\n      )}\n      <AsyncChart metric=\"users\" model={model} dateRange={dateRange}>\n        <TopModelsChartLayout title={<Trans message=\"Top listeners\" />} />\n      </AsyncChart>\n      {props.showArtistsAndAlbums && (\n        <Fragment>\n          <AsyncChart metric=\"artists\" model={model} dateRange={dateRange}>\n            <TopModelsChartLayout\n              title={<Trans message=\"Most played artists\" />}\n            />\n          </AsyncChart>\n          <AsyncChart metric=\"albums\" model={model} dateRange={dateRange}>\n            <TopModelsChartLayout\n              title={<Trans message=\"Most played albums\" />}\n            />\n          </AsyncChart>\n        </Fragment>\n      )}\n      <AsyncChart metric=\"locations\" model={model} dateRange={dateRange}>\n        <GeoChart />\n      </AsyncChart>\n      <AsyncChart metric=\"platforms\" model={model} dateRange={dateRange}>\n        <PolarAreaChart\n          colSpan=\"col-span-5\"\n          title={<Trans message=\"Top platforms\" />}\n        />\n      </AsyncChart>\n    </div>\n  );\n}\n\ninterface AsyncChartProps {\n  children:\n    | ReactElement<BaseChartProps>\n    | ((\n        query: UseQueryResult<FetchInsightsReportResponse>,\n      ) => ReactElement<BaseChartProps>);\n  metric: InsightsReportMetric;\n  model: string;\n  dateRange: DateRangeValue;\n}\nfunction AsyncChart({children, metric, model, dateRange}: AsyncChartProps) {\n  const [isEnabled, setIsEnabled] = useState(false);\n  const query = useInsightsReport(\n    {metrics: [metric], model, dateRange},\n    {isEnabled},\n  );\n  const chart = typeof children === 'function' ? children(query) : children;\n  const observerRef = useRef<IntersectionObserver>();\n\n  const contentRef = useCallback((el: HTMLDivElement | null) => {\n    if (el) {\n      const observer = new IntersectionObserver(\n        ([e]) => {\n          if (e.isIntersecting) {\n            setIsEnabled(true);\n            observerRef.current?.disconnect();\n            observerRef.current = undefined;\n          }\n        },\n        {threshold: 0.1}, // if only header is visible, don't load\n      );\n      observerRef.current = observer;\n      observer.observe(el);\n    } else if (observerRef.current) {\n      observerRef.current?.disconnect();\n    }\n  }, []);\n\n  return cloneElement<BaseChartProps>(chart, {\n    data: query.data?.report?.[metric],\n    isLoading: query.isLoading,\n    contentRef,\n  });\n}\n","import {Trans} from '@ui/i18n/trans';\nimport React, {cloneElement, ReactElement} from 'react';\n\ninterface Props {\n  image: ReactElement<{size: string; className: string}>;\n  name: ReactElement;\n  description?: ReactElement;\n}\nexport function BackstageInsightsTitle({image, name, description}: Props) {\n  return (\n    <div className=\"flex items-center gap-10\">\n      {cloneElement(image, {size: 'w-48 h-48', className: 'rounded'})}\n      <div>\n        <h1 className=\"overflow-hidden overflow-ellipsis whitespace-nowrap text-base\">\n          “{name}“ <Trans message=\"insights\" />\n        </h1>\n        {description && <div className=\"text-sm text-muted\">{description}</div>}\n      </div>\n    </div>\n  );\n}\n","import {useParams} from 'react-router';\nimport {BackstageInsightsLayout} from '@app/web-player/backstage/insights/backstage-insights-layout';\nimport {InsightsReportCharts} from '@app/admin/reports/insights-report-charts';\nimport React from 'react';\nimport {useArtist} from '@app/web-player/artists/requests/use-artist';\nimport {BackstageInsightsTitle} from '@app/web-player/backstage/insights/backstage-insights-title';\nimport {SmallArtistImage} from '@app/web-player/artists/artist-image/small-artist-image';\nimport {ArtistLink} from '@app/web-player/artists/artist-link';\n\ninterface Props {\n  isNested?: boolean;\n}\nexport function BackstageArtistInsights({isNested}: Props) {\n  const {artistId} = useParams();\n  const {data} = useArtist({loader: 'artist'});\n  return (\n    <BackstageInsightsLayout\n      reportModel={`artist=${artistId}`}\n      title={\n        data?.artist && (\n          <BackstageInsightsTitle\n            image={<SmallArtistImage artist={data.artist} />}\n            name={<ArtistLink artist={data.artist} />}\n          />\n        )\n      }\n      isNested={isNested}\n    >\n      <InsightsReportCharts showTracks />\n    </BackstageInsightsLayout>\n  );\n}\n\nexport function NestedBackstageArtistInsights() {\n  return <BackstageArtistInsights isNested />;\n}\n","import {useParams} from 'react-router';\nimport {BackstageInsightsLayout} from '@app/web-player/backstage/insights/backstage-insights-layout';\nimport {InsightsReportCharts} from '@app/admin/reports/insights-report-charts';\nimport React from 'react';\nimport {useAlbum} from '@app/web-player/albums/requests/use-album';\nimport {BackstageInsightsTitle} from '@app/web-player/backstage/insights/backstage-insights-title';\nimport {ArtistLinks} from '@app/web-player/artists/artist-links';\nimport {AlbumImage} from '@app/web-player/albums/album-image/album-image';\nimport {AlbumLink} from '@app/web-player/albums/album-link';\n\ninterface Props {\n  isNested?: boolean;\n}\nexport function BackstageAlbumInsights({isNested}: Props) {\n  const {albumId} = useParams();\n  const {data} = useAlbum({loader: 'album'});\n  return (\n    <BackstageInsightsLayout\n      reportModel={`album=${albumId}`}\n      title={\n        data?.album && (\n          <BackstageInsightsTitle\n            image={<AlbumImage album={data.album} />}\n            name={<AlbumLink album={data.album} />}\n            description={<ArtistLinks artists={data.album.artists} />}\n          />\n        )\n      }\n      isNested={isNested}\n    >\n      <InsightsReportCharts showTracks />\n    </BackstageInsightsLayout>\n  );\n}\n\nexport function NestedBackstageAlbumInsights() {\n  return <BackstageAlbumInsights isNested />;\n}\n","import {useParams} from 'react-router';\nimport {BackstageInsightsLayout} from '@app/web-player/backstage/insights/backstage-insights-layout';\nimport {InsightsReportCharts} from '@app/admin/reports/insights-report-charts';\nimport React from 'react';\nimport {useTrack} from '@app/web-player/tracks/requests/use-track';\nimport {BackstageInsightsTitle} from '@app/web-player/backstage/insights/backstage-insights-title';\nimport {TrackImage} from '@app/web-player/tracks/track-image/track-image';\nimport {TrackLink} from '@app/web-player/tracks/track-link';\nimport {ArtistLinks} from '@app/web-player/artists/artist-links';\n\ninterface Props {\n  isNested?: boolean;\n}\nexport function BackstageTrackInsights({isNested}: Props) {\n  const {trackId} = useParams();\n  const {data} = useTrack({loader: 'track'});\n  return (\n    <BackstageInsightsLayout\n      reportModel={`track=${trackId}`}\n      title={\n        data?.track && (\n          <BackstageInsightsTitle\n            image={<TrackImage track={data.track} />}\n            name={<TrackLink track={data.track} />}\n            description={<ArtistLinks artists={data.track.artists} />}\n          />\n        )\n      }\n      isNested={isNested}\n    >\n      <InsightsReportCharts />\n    </BackstageInsightsLayout>\n  );\n}\n\nexport function NestedBackstageTrackInsights() {\n  return <BackstageTrackInsights isNested />;\n}\n","import {useCallback, useRef, useState} from 'react';\n\nexport function useStickySentinel() {\n  const [isSticky, setIsSticky] = useState(false);\n\n  const observerRef = useRef<IntersectionObserver>();\n\n  const sentinelRef = useCallback((sentinel: HTMLDivElement | null) => {\n    if (sentinel) {\n      const observer = new IntersectionObserver(\n        ([e]) => setIsSticky(e.intersectionRatio < 1),\n        {threshold: [1]},\n      );\n      observerRef.current = observer;\n      observer.observe(sentinel);\n    } else if (observerRef.current) {\n      observerRef.current?.disconnect();\n    }\n  }, []);\n\n  return {isSticky, sentinelRef};\n}\n","import {\n  FieldValues,\n  SubmitHandler,\n  useFormContext,\n  UseFormReturn,\n} from 'react-hook-form';\nimport clsx from 'clsx';\nimport React, {Fragment, ReactElement, ReactNode} from 'react';\nimport {useStickySentinel} from '@ui/utils/hooks/sticky-sentinel';\nimport {Form} from '@ui/forms/form';\nimport {Button} from '@ui/buttons/button';\nimport {Trans} from '@ui/i18n/trans';\nimport {AnimatePresence, m} from 'framer-motion';\n\ninterface Props<T extends FieldValues> {\n  onSubmit: SubmitHandler<T>;\n  form: UseFormReturn<T>;\n  title: ReactNode;\n  subTitle?: ReactNode;\n  isLoading: boolean;\n  children: ReactNode;\n  actions?: ReactNode;\n  backButton?: ReactNode;\n  disableSaveWhenNotDirty?: boolean;\n  wrapInContainer?: boolean;\n  submitButtonText?: ReactNode;\n  variant?: 'popup' | 'sticky';\n}\nexport function CrupdateResourceLayout<T extends FieldValues>({\n  onSubmit,\n  form,\n  title,\n  subTitle,\n  children,\n  actions,\n  backButton,\n  isLoading = false,\n  disableSaveWhenNotDirty = false,\n  wrapInContainer = true,\n  submitButtonText,\n  variant = 'sticky',\n}: Props<T>) {\n  const {isSticky, sentinelRef} = useStickySentinel();\n  const isDirty = !disableSaveWhenNotDirty\n    ? true\n    : Object.keys(form.formState.dirtyFields).length;\n\n  const saveButton = (\n    <Button\n      variant=\"flat\"\n      color=\"primary\"\n      type=\"submit\"\n      disabled={isLoading || !isDirty}\n    >\n      {submitButtonText ?? <Trans message=\"Save\" />}\n    </Button>\n  );\n\n  return (\n    <Form\n      onSubmit={onSubmit}\n      onBeforeSubmit={() => form.clearErrors()}\n      form={form}\n      className=\"relative\"\n    >\n      {variant === 'sticky' && <div ref={sentinelRef} />}\n      <CrupdateResourceHeader\n        wrapInContainer={wrapInContainer}\n        startActions={backButton}\n        subTitle={subTitle}\n        endActions={\n          <Fragment>\n            {actions}\n            {variant === 'sticky' && saveButton}\n          </Fragment>\n        }\n        className={clsx(\n          isSticky && 'bg shadow',\n          variant === 'sticky' && 'sticky',\n        )}\n      >\n        {title}\n      </CrupdateResourceHeader>\n      <div\n        className={\n          wrapInContainer ? 'container mx-auto px-24 pb-24' : undefined\n        }\n      >\n        <div className=\"rounded\">{children}</div>\n      </div>\n      {variant === 'popup' && (\n        <DirtyFormSaveDrawer saveButton={saveButton} isLoading={isLoading} />\n      )}\n    </Form>\n  );\n}\n\ninterface CrupdateResourceHeaderProps {\n  className?: string;\n  wrapInContainer?: boolean;\n  children: ReactNode;\n  subTitle?: ReactNode;\n  startActions?: ReactNode;\n  endActions?: ReactNode;\n}\nexport function CrupdateResourceHeader({\n  className,\n  wrapInContainer,\n  children,\n  subTitle,\n  startActions,\n  endActions,\n}: CrupdateResourceHeaderProps) {\n  return (\n    <div\n      className={clsx('top-0 z-10 my-12 transition-shadow md:my-24', className)}\n    >\n      <div\n        className={clsx(\n          'flex items-center gap-24 py-14 md:items-start',\n          wrapInContainer && 'container mx-auto px-24',\n        )}\n      >\n        {startActions}\n        <div className=\"flex-auto overflow-hidden overflow-ellipsis md:mr-64\">\n          <h1 className=\"overflow-hidden overflow-ellipsis whitespace-nowrap text-xl md:text-3xl\">\n            {children}\n          </h1>\n          {subTitle && <div className=\"mt-4\">{subTitle}</div>}\n        </div>\n        <div className=\"mr-auto\"></div>\n        {endActions}\n      </div>\n    </div>\n  );\n}\n\ninterface CrupdateResourceSectionProps {\n  label: ReactElement;\n  labelMargin?: string;\n  children: ReactNode;\n  margin?: string;\n}\n\nexport function CrupdateResourceSection({\n  label,\n  children,\n  margin = 'mb-48',\n  labelMargin = 'mb-16',\n}: CrupdateResourceSectionProps) {\n  return (\n    <section className={clsx(margin)}>\n      <div className={clsx(labelMargin, 'text-lg font-semibold')}>{label}</div>\n      {children}\n    </section>\n  );\n}\n\ninterface DirtyFormSaveDrawerProps {\n  saveButton?: ReactElement;\n  isLoading?: boolean;\n}\n\nexport function DirtyFormSaveDrawer({\n  saveButton,\n  isLoading,\n}: DirtyFormSaveDrawerProps) {\n  const {formState, reset} = useFormContext();\n  return (\n    <AnimatePresence>\n      {formState.isDirty && (\n        <Fragment>\n          <div className=\"invisible h-92\" />\n          <m.div\n            key=\"dirty-panel\"\n            initial={{y: 100, opacity: 0}}\n            animate={{y: 0, opacity: 1}}\n            exit={{y: 100, opacity: 0}}\n            transition={{duration: 0.2}}\n            className=\"fixed bottom-0 left-0 right-0 z-20 flex items-center justify-center gap-16 border-t bg px-12 py-28 shadow-[rgba(0,0,0,0.2)_0px_0px_10px]\"\n          >\n            <Button variant=\"outline\" onClick={() => reset()}>\n              <Trans message=\"Cancel\" />\n            </Button>\n            {saveButton ?? (\n              <Button\n                variant=\"flat\"\n                color=\"primary\"\n                type=\"submit\"\n                disabled={isLoading}\n              >\n                <Trans message=\"Save changes\" />\n              </Button>\n            )}\n          </m.div>\n        </Fragment>\n      )}\n    </AnimatePresence>\n  );\n}\n","import React from 'react';\nimport {CrupdateResourceLayout} from '@common/admin/crupdate-resource-layout';\nimport {Trans} from '@ui/i18n/trans';\nimport {TrackForm} from '@app/admin/tracks-datatable-page/track-form/track-form';\nimport {useCreateTrackForm} from '@app/admin/tracks-datatable-page/crupdate/use-create-track-form';\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\nimport {useLocation} from 'react-router';\nimport {getTrackLink} from '@app/web-player/tracks/track-link';\nimport {BackstageLayout} from '@app/web-player/backstage/backstage-layout';\n\ninterface Props {\n  wrapInContainer?: boolean;\n}\nexport function CreateTrackPage({wrapInContainer}: Props) {\n  const navigate = useNavigate();\n  const {pathname} = useLocation();\n  const {form, createTrack} = useCreateTrackForm({\n    onTrackCreated: response => {\n      if (pathname.includes('admin')) {\n        navigate(`/admin/tracks/${response.track.id}/edit`);\n      } else {\n        navigate(getTrackLink(response.track));\n      }\n    },\n  });\n  return (\n    <CrupdateResourceLayout\n      form={form}\n      onSubmit={values => {\n        createTrack.mutate(values);\n      }}\n      title={<Trans message=\"Add new track\" />}\n      isLoading={createTrack.isPending}\n      disableSaveWhenNotDirty\n      wrapInContainer={wrapInContainer}\n    >\n      <FileUploadProvider>\n        <TrackForm showExternalIdFields />\n      </FileUploadProvider>\n    </CrupdateResourceLayout>\n  );\n}\n\nexport function BackstageCreateTrackPage() {\n  return (\n    <BackstageLayout>\n      <CreateTrackPage />\n    </BackstageLayout>\n  );\n}\n","import React from 'react';\nimport {CrupdateResourceLayout} from '@common/admin/crupdate-resource-layout';\nimport {Trans} from '@ui/i18n/trans';\nimport {TrackForm} from '@app/admin/tracks-datatable-page/track-form/track-form';\nimport {useTrack} from '@app/web-player/tracks/requests/use-track';\nimport {Track} from '@app/web-player/tracks/track';\nimport {useUpdateTrackForm} from '@app/admin/tracks-datatable-page/crupdate/use-update-track-form';\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\nimport {PageStatus} from '@common/http/page-status';\nimport {Navigate, useLocation} from 'react-router';\nimport {getTrackLink} from '@app/web-player/tracks/track-link';\nimport {useTrackPermissions} from '@app/web-player/tracks/hooks/use-track-permissions';\nimport {BackstageLayout} from '@app/web-player/backstage/backstage-layout';\n\ninterface Props {\n  wrapInContainer?: boolean;\n}\nexport function UpdateTrackPage({wrapInContainer}: Props) {\n  const query = useTrack({loader: 'editTrackPage'});\n  if (query.data) {\n    return (\n      <PageContent track={query.data.track} wrapInContainer={wrapInContainer} />\n    );\n  }\n  return (\n    <PageStatus\n      query={query}\n      loaderClassName=\"absolute inset-0 m-auto\"\n      loaderIsScreen={false}\n    />\n  );\n}\n\ninterface PageContentProps {\n  track: Track;\n  wrapInContainer?: boolean;\n}\nfunction PageContent({track, wrapInContainer}: PageContentProps) {\n  const {canEdit} = useTrackPermissions([track]);\n  const navigate = useNavigate();\n  const {pathname} = useLocation();\n  const {form, updateTrack} = useUpdateTrackForm(track, {\n    onTrackUpdated: response => {\n      if (pathname.includes('admin')) {\n        navigate('/admin/tracks');\n      } else {\n        navigate(getTrackLink(response.track));\n      }\n    },\n  });\n\n  if (!canEdit) {\n    return <Navigate to=\"/\" replace />;\n  }\n\n  return (\n    <CrupdateResourceLayout\n      form={form}\n      onSubmit={values => {\n        updateTrack.mutate(values);\n      }}\n      title={<Trans message=\"Edit “:name“ track\" values={{name: track.name}} />}\n      isLoading={updateTrack.isPending}\n      disableSaveWhenNotDirty\n      wrapInContainer={wrapInContainer}\n    >\n      <FileUploadProvider>\n        <TrackForm showExternalIdFields />\n      </FileUploadProvider>\n    </CrupdateResourceLayout>\n  );\n}\n\nexport function BackstageUpdateTrackPage() {\n  return (\n    <BackstageLayout>\n      <UpdateTrackPage />\n    </BackstageLayout>\n  );\n}\n","import {useForm} from 'react-hook-form';\nimport React, {useEffect} from 'react';\nimport {CrupdateResourceLayout} from '@common/admin/crupdate-resource-layout';\nimport {Trans} from '@ui/i18n/trans';\nimport {AlbumForm} from '@app/admin/albums-datatable-page/album-form/album-form';\nimport {\n  CreateAlbumPayload,\n  useCreateAlbum,\n} from '@app/admin/albums-datatable-page/requests/use-create-album';\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\nimport {useLocation, useSearchParams} from 'react-router';\nimport {useCurrentDateTime} from '@ui/i18n/use-current-date-time';\nimport {getAlbumLink} from '@app/web-player/albums/album-link';\nimport {\n  FileUploadProvider,\n  useFileUploadStore,\n} from '@common/uploads/uploader/file-upload-provider';\nimport {useNormalizedModel} from '@common/ui/normalized-model/use-normalized-model';\nimport {BackstageLayout} from '@app/web-player/backstage/backstage-layout';\n\ninterface Props {\n  wrapInContainer?: boolean;\n}\nexport function CreateAlbumPage({wrapInContainer}: Props) {\n  return (\n    <FileUploadProvider>\n      <PageContent wrapInContainer={wrapInContainer} />\n    </FileUploadProvider>\n  );\n}\n\nfunction PageContent({wrapInContainer}: Props) {\n  const uploadIsInProgress = !!useFileUploadStore(s => s.activeUploadsCount);\n  const now = useCurrentDateTime();\n  const navigate = useNavigate();\n  const {pathname} = useLocation();\n  const [searchParams] = useSearchParams();\n  const {data} = useNormalizedModel(\n    `normalized-models/artist/${searchParams.get('artistId')}`,\n    undefined,\n    {enabled: !!searchParams.get('artistId')},\n  );\n  const artist = data?.model;\n  const form = useForm<CreateAlbumPayload>({\n    defaultValues: {\n      release_date: now.toAbsoluteString(),\n    },\n  });\n  const createAlbum = useCreateAlbum(form);\n\n  useEffect(() => {\n    if (artist) {\n      form.reset({\n        artists: [artist],\n      });\n    }\n  }, [artist, form]);\n\n  return (\n    <CrupdateResourceLayout\n      form={form}\n      onSubmit={values => {\n        createAlbum.mutate(values, {\n          onSuccess: response => {\n            if (pathname.includes('admin')) {\n              if (artist) {\n                navigate(`/admin/artists/${artist.id}/edit`);\n              } else {\n                navigate('/admin/albums');\n              }\n            } else {\n              navigate(getAlbumLink(response.album));\n            }\n          },\n        });\n      }}\n      title={<Trans message=\"Add new album\" />}\n      isLoading={createAlbum.isPending || uploadIsInProgress}\n      disableSaveWhenNotDirty\n      wrapInContainer={wrapInContainer}\n    >\n      <AlbumForm showExternalIdFields />\n    </CrupdateResourceLayout>\n  );\n}\n\nexport function BackstageCreateAlbumPage() {\n  return (\n    <BackstageLayout>\n      <CreateAlbumPage wrapInContainer={false} />\n    </BackstageLayout>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {UseFormReturn} from 'react-hook-form';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {\n  CreateAlbumPayload,\n  prepareAlbumPayload,\n} from '@app/admin/albums-datatable-page/requests/use-create-album';\nimport {Album} from '@app/web-player/albums/album';\nimport {useLocation} from 'react-router';\nimport {getAlbumLink} from '@app/web-player/albums/album-link';\n\ninterface Response extends BackendResponse {\n  album: Album;\n}\n\nexport interface UpdateAlbumPayload extends CreateAlbumPayload {\n  id: number;\n}\n\nconst Endpoint = (id: number) => `albums/${id}`;\n\nexport function useUpdateAlbum(\n  form: UseFormReturn<UpdateAlbumPayload>,\n  albumId: number,\n) {\n  const {trans} = useTrans();\n  const navigate = useNavigate();\n  const {pathname} = useLocation();\n  return useMutation({\n    mutationFn: (payload: UpdateAlbumPayload) => updateAlbum(albumId, payload),\n    onSuccess: response => {\n      toast(trans(message('Album updated')));\n      queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey('albums'),\n      });\n      if (pathname.includes('admin')) {\n        navigate('/admin/albums');\n      } else {\n        navigate(getAlbumLink(response.album));\n      }\n    },\n    onError: err => onFormQueryError(err, form),\n  });\n}\n\nfunction updateAlbum(\n  id: number,\n  payload: UpdateAlbumPayload,\n): Promise<Response> {\n  return apiClient\n    .put(Endpoint(id), prepareAlbumPayload(payload))\n    .then(r => r.data);\n}\n","import {useForm} from 'react-hook-form';\nimport React from 'react';\nimport {CrupdateResourceLayout} from '@common/admin/crupdate-resource-layout';\nimport {Trans} from '@ui/i18n/trans';\nimport {useAlbum} from '@app/web-player/albums/requests/use-album';\nimport {Album} from '@app/web-player/albums/album';\nimport {\n  UpdateAlbumPayload,\n  useUpdateAlbum,\n} from '@app/admin/albums-datatable-page/requests/use-update-album';\nimport {AlbumForm} from '@app/admin/albums-datatable-page/album-form/album-form';\nimport {PageStatus} from '@common/http/page-status';\nimport {\n  FileUploadProvider,\n  useFileUploadStore,\n} from '@common/uploads/uploader/file-upload-provider';\nimport {Navigate} from 'react-router';\nimport {useAlbumPermissions} from '@app/web-player/albums/use-album-permissions';\nimport {BackstageLayout} from '@app/web-player/backstage/backstage-layout';\n\ninterface Props {\n  wrapInContainer?: boolean;\n}\nexport function UpdateAlbumPage({wrapInContainer}: Props) {\n  const query = useAlbum({loader: 'editAlbumPage'});\n\n  if (query.data) {\n    return (\n      <FileUploadProvider>\n        <PageContent\n          album={query.data.album}\n          wrapInContainer={wrapInContainer}\n        />\n      </FileUploadProvider>\n    );\n  }\n\n  return (\n    <PageStatus\n      query={query}\n      loaderIsScreen={false}\n      loaderClassName=\"absolute inset-0 m-auto\"\n    />\n  );\n}\n\ninterface PageContentProps {\n  album: Album;\n  wrapInContainer?: boolean;\n}\nfunction PageContent({album, wrapInContainer}: PageContentProps) {\n  const {canEdit} = useAlbumPermissions(album);\n  const uploadIsInProgress = !!useFileUploadStore(s => s.activeUploadsCount);\n  const form = useForm<UpdateAlbumPayload>({\n    defaultValues: {\n      image: album.image,\n      name: album.name,\n      release_date: album.release_date,\n      artists: album.artists,\n      genres: album.genres,\n      tags: album.tags,\n      description: album.description,\n      spotify_id: album.spotify_id,\n      tracks: album.tracks,\n    },\n  });\n  const updateAlbum = useUpdateAlbum(form, album.id);\n\n  if (!canEdit) {\n    return <Navigate to=\"/\" replace />;\n  }\n\n  return (\n    <CrupdateResourceLayout\n      form={form}\n      onSubmit={values => {\n        updateAlbum.mutate(values);\n      }}\n      title={<Trans message=\"Edit “:name“ album\" values={{name: album.name}} />}\n      isLoading={updateAlbum.isPending || uploadIsInProgress}\n      disableSaveWhenNotDirty\n      wrapInContainer={wrapInContainer}\n    >\n      <AlbumForm showExternalIdFields />\n    </CrupdateResourceLayout>\n  );\n}\n\nexport function BackstageUpdateAlbumPage() {\n  return (\n    <BackstageLayout>\n      <UpdateAlbumPage wrapInContainer={false} />\n    </BackstageLayout>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {UseFormReturn} from 'react-hook-form';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {Artist} from '@app/web-player/artists/artist';\nimport {CreateArtistPayload} from '@app/admin/artist-datatable-page/requests/use-create-artist';\nimport {useLocation} from 'react-router';\nimport {getArtistLink} from '@app/web-player/artists/artist-link';\n\ninterface Response extends BackendResponse {\n  artist: Artist;\n}\n\nexport interface UpdateArtistPayload extends CreateArtistPayload {\n  id: number;\n}\n\nconst Endpoint = (id: number) => `artists/${id}`;\n\nexport function useUpdateArtist(form: UseFormReturn<UpdateArtistPayload>) {\n  const {trans} = useTrans();\n  const navigate = useNavigate();\n  const {pathname} = useLocation();\n  return useMutation({\n    mutationFn: (payload: UpdateArtistPayload) => updateAlbum(payload),\n    onSuccess: response => {\n      toast(trans(message('Artist updated')));\n      queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey('artists'),\n      });\n      if (pathname.includes('admin')) {\n        navigate('/admin/artists');\n      } else {\n        navigate(getArtistLink(response.artist));\n      }\n    },\n    onError: err => onFormQueryError(err, form),\n  });\n}\n\nfunction updateAlbum({id, ...payload}: UpdateArtistPayload): Promise<Response> {\n  return apiClient.put(Endpoint(id), payload).then(r => r.data);\n}\n","import {useFormContext} from 'react-hook-form';\nimport React from 'react';\nimport {Trans} from '@ui/i18n/trans';\nimport {Button} from '@ui/buttons/button';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {AddIcon} from '@ui/icons/material/Add';\nimport {EditIcon} from '@ui/icons/material/Edit';\nimport musicImage from '@app/admin/tracks-datatable-page/music.svg';\nimport {IllustratedMessage} from '@ui/images/illustrated-message';\nimport {Link} from 'react-router';\nimport {ColumnConfig} from '@common/datatable/column-config';\nimport {Album} from '@app/web-player/albums/album';\nimport {AlbumImage} from '@app/web-player/albums/album-image/album-image';\nimport {AlbumLink} from '@app/web-player/albums/album-link';\nimport {FormattedDate} from '@ui/i18n/formatted-date';\nimport {FormattedNumber} from '@ui/i18n/formatted-number';\nimport {Table} from '@common/ui/tables/table';\nimport {useSortableTableData} from '@common/ui/tables/use-sortable-table-data';\nimport {UpdateArtistPayload} from '@app/admin/artist-datatable-page/requests/use-update-artist';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {ConfirmationDialog} from '@ui/overlays/dialog/confirmation-dialog';\nimport {CloseIcon} from '@ui/icons/material/Close';\nimport {useDeleteAlbum} from '@app/web-player/albums/requests/use-delete-album';\nimport {InfoDialogTriggerIcon} from '@ui/overlays/dialog/info-dialog-trigger/info-dialog-trigger-icon';\nimport {SvgImage} from '@ui/images/svg-image';\n\nconst Columns: ColumnConfig<Album>[] = [\n  {\n    key: 'name',\n    allowsSorting: true,\n    header: () => <Trans message=\"Name\" />,\n    visibleInMode: 'all',\n    width: 'flex-3',\n    body: album => (\n      <div className=\"flex items-center gap-12\">\n        <AlbumImage\n          album={album}\n          className=\"flex-shrink-0\"\n          size=\"w-34 h-34 rounded\"\n        />\n        <AlbumLink album={album} target=\"_blank\" />\n      </div>\n    ),\n  },\n  {\n    key: 'release_date',\n    allowsSorting: true,\n    header: () => <Trans message=\"Release date\" />,\n    body: album =>\n      album.release_date ? <FormattedDate date={album.release_date} /> : null,\n  },\n  {\n    key: 'track_count',\n    allowsSorting: false,\n    header: () => <Trans message=\"Track count\" />,\n    body: album =>\n      album.tracks_count ? (\n        <FormattedNumber value={album.tracks_count} />\n      ) : null,\n  },\n  {\n    key: 'plays',\n    allowsSorting: true,\n    header: () => <Trans message=\"Plays\" />,\n    body: album =>\n      album.plays ? <FormattedNumber value={album.plays} /> : null,\n  },\n  {\n    key: 'actions',\n    header: () => <Trans message=\"Actions\" />,\n    width: 'w-84 flex-shrink-0',\n    visibleInMode: 'all',\n    hideHeader: true,\n    align: 'end',\n    body: album => <RowActions album={album} />,\n  },\n];\n\ninterface Props {\n  albums?: Album[];\n}\nexport function ArtistAlbumsTable({albums = []}: Props) {\n  const {watch} = useFormContext<UpdateArtistPayload>();\n  const artistId = watch('id');\n  const {data, sortDescriptor, onSortChange} = useSortableTableData(albums);\n  return (\n    <div>\n      <div className=\"my-24\">\n        <div className=\"flex items-center gap-12\">\n          <h2 className=\"text-xl font-semibold\">\n            <Trans message=\"Albums\" />\n          </h2>\n          <Button\n            variant=\"outline\"\n            color=\"primary\"\n            size=\"xs\"\n            className=\"ml-auto\"\n            startIcon={<AddIcon />}\n            elementType={artistId ? Link : undefined}\n            to={`../../../albums/new?artistId=${artistId}`}\n            relative=\"path\"\n            disabled={!artistId}\n          >\n            <Trans message=\"Add album\" />\n          </Button>\n        </div>\n\n        {!artistId && (\n          <div className=\"flex items-center gap-6 text-sm\">\n            <InfoDialogTriggerIcon\n              viewBox=\"0 0 16 16\"\n              size=\"xs\"\n              className=\"text-muted\"\n            />\n            <Trans message=\"Save changes to enable album creation.\" />\n          </div>\n        )}\n      </div>\n\n      <Table\n        columns={Columns}\n        data={albums}\n        sortDescriptor={sortDescriptor}\n        onSortChange={onSortChange}\n        enableSelection={false}\n      />\n\n      {!data.length ? (\n        <IllustratedMessage\n          className=\"mt-40\"\n          image={<SvgImage src={musicImage} />}\n          title={<Trans message=\"This artist does not have any albums yet\" />}\n        />\n      ) : null}\n    </div>\n  );\n}\n\ninterface RowActionsProps {\n  album: Album;\n}\nfunction RowActions({album}: RowActionsProps) {\n  const deleteAlbum = useDeleteAlbum();\n  return (\n    <div className=\"text-muted\">\n      <Link to={`../../../albums/${album.id}/edit`} relative=\"path\">\n        <IconButton size=\"md\">\n          <EditIcon />\n        </IconButton>\n      </Link>\n      <DialogTrigger\n        type=\"modal\"\n        onClose={isConfirmed => {\n          if (isConfirmed) {\n            deleteAlbum.mutate({albumId: album.id});\n          }\n        }}\n      >\n        <IconButton size=\"md\" disabled={deleteAlbum.isPending}>\n          <CloseIcon />\n        </IconButton>\n        <ConfirmationDialog\n          isDanger\n          title={<Trans message=\"Delete album\" />}\n          body={<Trans message=\"Are you sure you want to delete this album?\" />}\n          confirm={<Trans message=\"Delete\" />}\n        />\n      </DialogTrigger>\n    </div>\n  );\n}\n","import React, {Fragment} from 'react';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {Trans} from '@ui/i18n/trans';\nimport {FormImageSelector} from '@common/uploads/components/image-selector';\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\nimport {FormNormalizedModelChipField} from '@common/tags/form-normalized-model-chip-field';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {message} from '@ui/i18n/message';\nimport {GENRE_MODEL} from '@app/web-player/genres/genre';\nimport {useSettings} from '@ui/settings/use-settings';\nimport {useIsMobileMediaQuery} from '@ui/utils/hooks/is-mobile-media-query';\nimport {FormSwitch} from '@ui/forms/toggle/switch';\nimport {ArtistAlbumsTable} from '@app/admin/artist-datatable-page/artist-form/artist-albums-table';\nimport {Album} from '@app/web-player/albums/album';\nimport {TabList} from '@ui/tabs/tab-list';\nimport {Tab} from '@ui/tabs/tab';\nimport {TabPanel, TabPanels} from '@ui/tabs/tab-panels';\nimport {Tabs} from '@ui/tabs/tabs';\nimport {useFieldArray} from 'react-hook-form';\nimport {Button} from '@ui/buttons/button';\nimport {AddIcon} from '@ui/icons/material/Add';\nimport {CreateArtistPayload} from '@app/admin/artist-datatable-page/requests/use-create-artist';\nimport {ProfileLinksForm} from '@app/admin/artist-datatable-page/artist-form/profile-links-form';\n\ninterface Props {\n  albums?: Album[];\n  showExternalFields?: boolean;\n}\nexport function CrupdateArtistForm({albums, showExternalFields}: Props) {\n  const isMobile = useIsMobileMediaQuery();\n  return (\n    <FileUploadProvider>\n      <div className=\"gap-24 md:flex\">\n        <div className=\"flex-shrink-0\">\n          <FormImageSelector\n            name=\"image_small\"\n            diskPrefix=\"artist_images\"\n            label={isMobile ? <Trans message=\"Image\" /> : null}\n            variant={isMobile ? 'input' : 'square'}\n            previewSize={isMobile ? undefined : 'w-full md:w-224 aspect-square'}\n            stretchPreview\n          />\n          {showExternalFields && (\n            <FormSwitch name=\"verified\" className=\"mt-14\">\n              <Trans message=\"Verified\" />\n            </FormSwitch>\n          )}\n        </div>\n        <div className=\"mt-24 flex-auto md:mt-0\">\n          <Tabs isLazy>\n            <TabList>\n              <Tab>\n                <Trans message=\"Details\" />\n              </Tab>\n              <Tab>\n                <Trans message=\"Links\" />\n              </Tab>\n              <Tab>\n                <Trans message=\"Biography\" />\n              </Tab>\n              <Tab>\n                <Trans message=\"Images\" />\n              </Tab>\n            </TabList>\n            <TabPanels className=\"pt-20\">\n              <TabPanel>\n                <DetailsPanel showExternalFields={showExternalFields} />\n              </TabPanel>\n              <TabPanel>\n                <ProfileLinksForm />\n              </TabPanel>\n              <TabPanel>\n                <BiographyPanel />\n              </TabPanel>\n              <TabPanel>\n                <ImagesPanel />\n              </TabPanel>\n            </TabPanels>\n          </Tabs>\n        </div>\n      </div>\n      <ArtistAlbumsTable albums={albums} />\n    </FileUploadProvider>\n  );\n}\n\ninterface DetailsPanelProps {\n  showExternalFields?: boolean;\n}\nfunction DetailsPanel({showExternalFields}: DetailsPanelProps) {\n  const {trans} = useTrans();\n  return (\n    <Fragment>\n      <FormTextField\n        name=\"name\"\n        label={<Trans message=\"Name\" />}\n        className=\"mb-24\"\n        required\n        autoFocus\n        disabled={!showExternalFields}\n      />\n      <FormNormalizedModelChipField\n        label={<Trans message=\"Genres\" />}\n        placeholder={trans(message('+Add genre'))}\n        model={GENRE_MODEL}\n        name=\"genres\"\n        allowCustomValue\n        className=\"mb-24\"\n      />\n      {showExternalFields && <SpotifyIdField />}\n    </Fragment>\n  );\n}\n\nfunction BiographyPanel() {\n  return (\n    <Fragment>\n      <FormTextField\n        name=\"profile.country\"\n        label={<Trans message=\"Country\" />}\n        className=\"mb-24\"\n      />\n      <FormTextField\n        name=\"profile.city\"\n        label={<Trans message=\"City\" />}\n        className=\"mb-24\"\n      />\n      <FormTextField\n        inputElementType=\"textarea\"\n        rows={5}\n        name=\"profile.description\"\n        label={<Trans message=\"Description\" />}\n        className=\"mb-24\"\n      />\n    </Fragment>\n  );\n}\n\nfunction ImagesPanel() {\n  const {fields, append, remove} = useFieldArray<CreateArtistPayload>({\n    name: 'profile_images',\n  });\n\n  return (\n    <div>\n      <div className=\"mb-24 flex flex-wrap gap-12\">\n        {fields.map((field, index) => {\n          return (\n            <FormImageSelector\n              key={field.id}\n              name={`profile_images.${index}.url`}\n              diskPrefix=\"artist_images\"\n              variant=\"square\"\n              previewSize=\"w-160 h-160\"\n              stretchPreview\n              showRemoveButton\n              onChange={value => {\n                if (!value) {\n                  remove(index);\n                }\n              }}\n            />\n          );\n        })}\n      </div>\n      <Button\n        variant=\"outline\"\n        color=\"primary\"\n        startIcon={<AddIcon />}\n        onClick={() => {\n          append({url: ''});\n        }}\n      >\n        <Trans message=\"Add another image\" />\n      </Button>\n    </div>\n  );\n}\n\nfunction SpotifyIdField() {\n  const {spotify_is_setup} = useSettings();\n  if (!spotify_is_setup) {\n    return null;\n  }\n  return (\n    <FormTextField\n      name=\"spotify_id\"\n      label={<Trans message=\"Spotify ID\" />}\n      className=\"mb-24\"\n      minLength={22}\n      maxLength={22}\n    />\n  );\n}\n","import {useForm} from 'react-hook-form';\nimport React from 'react';\nimport {CrupdateResourceLayout} from '@common/admin/crupdate-resource-layout';\nimport {Trans} from '@ui/i18n/trans';\nimport {PageStatus} from '@common/http/page-status';\nimport {\n  useArtist,\n  UseArtistResponse,\n} from '@app/web-player/artists/requests/use-artist';\nimport {\n  UpdateArtistPayload,\n  useUpdateArtist,\n} from '@app/admin/artist-datatable-page/requests/use-update-artist';\nimport {CrupdateArtistForm} from '@app/admin/artist-datatable-page/artist-form/crupdate-artist-form';\nimport {useArtistPermissions} from '@app/web-player/artists/use-artist-permissions';\nimport {Navigate} from 'react-router';\nimport {BackstageLayout} from '@app/web-player/backstage/backstage-layout';\n\ninterface Props {\n  wrapInContainer?: boolean;\n  showExternalFields?: boolean;\n}\nexport function UpdateArtistPage({wrapInContainer, showExternalFields}: Props) {\n  const query = useArtist({\n    loader: 'editArtistPage',\n  });\n\n  if (query.data) {\n    return (\n      <PageContent\n        response={query.data}\n        wrapInContainer={wrapInContainer}\n        showExternalFields={showExternalFields}\n      />\n    );\n  }\n\n  return <PageStatus query={query} loaderClassName=\"absolute inset-0 m-auto\" />;\n}\n\ninterface PageContentProps {\n  response: UseArtistResponse;\n  wrapInContainer?: boolean;\n  showExternalFields?: boolean;\n}\nfunction PageContent({\n  response,\n  wrapInContainer,\n  showExternalFields,\n}: PageContentProps) {\n  const {canEdit} = useArtistPermissions(response.artist);\n  const form = useForm<UpdateArtistPayload>({\n    defaultValues: {\n      id: response.artist.id,\n      name: response.artist.name,\n      verified: response.artist.verified,\n      spotify_id: response.artist.spotify_id,\n      genres: response.artist.genres,\n      image_small: response.artist.image_small,\n      links: response.artist.links,\n      profile: response.artist.profile,\n      profile_images: response.artist.profile_images,\n    },\n  });\n  const updateArtist = useUpdateArtist(form);\n\n  if (!canEdit) {\n    return <Navigate to=\"/\" replace />;\n  }\n\n  return (\n    <CrupdateResourceLayout\n      form={form}\n      onSubmit={values => {\n        updateArtist.mutate(values);\n      }}\n      title={\n        <Trans\n          message=\"Edit “:name“ artist\"\n          values={{name: response.artist.name}}\n        />\n      }\n      isLoading={updateArtist.isPending}\n      disableSaveWhenNotDirty\n      wrapInContainer={wrapInContainer}\n    >\n      <CrupdateArtistForm\n        albums={response.albums?.data}\n        showExternalFields={showExternalFields}\n      />\n    </CrupdateResourceLayout>\n  );\n}\n\nexport function BackstageUpdateArtistPage() {\n  return (\n    <BackstageLayout>\n      <UpdateArtistPage wrapInContainer={false} showExternalFields={false} />\n    </BackstageLayout>\n  );\n}\n\nexport function UpdateArtistPageWithExternalFields() {\n  return <UpdateArtistPage showExternalFields />;\n}\n"],"names":["lightBgImage","darkBgImage","BackstageLayout","children","domProps","isDarkMode","useIsDarkMode","jsxs","jsx","Navbar","Footer","DatatableDataQueryKey","endpoint","params","baseQueryKey","key","useDatatableData","options","onLoad","optionsQueryKey","useQuery","signal","paginate","keepPreviousData","resolve","response","apiClient","DocumentScannerIcon","createSvgIcon","useNormalizedModels","queryParams","queryOptions","fetchModels","r","v","useNormalizedModel","fetchModel","NormalizedModelField","label","className","background","value","defaultValue","placeholder","message","searchPlaceholder","onChange","description","errorMessage","invalid","autoFocus","disabled","required","inputRef","useRef","inputValue","setInputValue","useState","selectedValue","setSelectedValue","useControlledState","query","trans","useTrans","fieldClassNames","getInputFieldClassNames","clsx","AnimatePresence","SelectedModelPreview","_a","_b","Select","model","Item","Avatar","modelId","onEditClick","data","isLoading","LoadingSkeleton","m","opacityAnimation","Tooltip","Trans","IconButton","EditIcon","Skeleton","FormNormalizedModelField","name","fieldProps","clearErrors","useFormContext","error","useController","useBackstageRequest","requestId","useParams","fetchBackstageRequest","trackId","useCreateTrack","form","onSuccess","useMutation","payload","createTrack","toast","queryClient","err","onFormQueryError","prepareTrackPayload","artist","useCreateAlbum","createAlbum","prepareAlbumPayload","track","useExtractTackFileMetadata","extractMeta","showHttpErrorToast","metadataToFormValues","values","hydrateAlbumForm","mergeArraysWithoutDuplicates","mergeTrackFormValues","newValues","oldValues","nv","ov","FiftyMB","useTrackUploader","uploads","useSettings","restrictions","useMemo","FileInputType","extractMetadata","optionsRef","uploadMultiple","useFileUploadStore","s","updateFileUpload","getUpload","updateUpload","useCallback","uploadId","newMeta","uploadOptions","Disk","entry","file","formValues","validateUploads","files","validFiles","validateFile","uploadTracks","waveData","generateWaveformData","openUploadWindow","stringToChipValue","ChipFieldInner","props","ref","fieldRef","useObjectRef","displayWith","validateWith","suggestions","onInputValueChange","onItemSelected","onOpenChange","chipSize","openMenuOnFocus","showEmptyMessage","propsValue","propsOnChange","valueKey","isAsync","allowCustomValue","showDropdownArrow","onChipClick","alwaysShowAvatar","readOnly","inputFieldProps","useChipFieldValueState","listboxIsOpen","setListboxIsOpen","loadingIndicator","ProgressCircle","dropdownArrow","KeyboardArrowDownIcon","inputProps","useField","Field","Input","ListWrapper","ChipInput","items","setItems","displayChipUsing","manager","useFocusManager","removeItem","i","cr","newItems","ChipList","item","Chip","setChips","chips","size","addItems","listbox","useListbox","handleItemSelection","activeIndex","setActiveIndex","isOpen","setIsOpen","refs","listboxId","collection","onInputChange","textValue","option","useLayoutEffect","handleTriggerKeyDown","handleListboxKeyboardNavigation","useListboxKeyboardNavigation","handleFocusAndClick","createEventHandler","Listbox","Popover","e","mergeProps","emails","selection","email","input","mixedValueToChipValue","propsDefaultValue","handleChange","newValue","ChipField","React","FormChipField","onBlur","formProps","useArtistPickerSuggestions","fetchArtists","FormArtistPicker","result","FormNormalizedModelChipField","TAG_MODEL","useDatePickerState","now","useCurrentDateTime","isPlaceholder","setIsPlaceholder","setStateValue","internalValue","setInternalValue","min","max","granularity","timezone","calendarIsOpen","setCalendarIsOpen","closeDialogOnSelection","useBaseDatePickerState","clear","calendarDates","setCalendarDates","toCalendarDate","toSafeZoned","dayIsActive","day","isSameDay","getCellProps","date","DatePicker","showCalendarFooter","state","footer","DialogFooter","Button","dialog","DialogTrigger","Dialog","DialogBody","Calendar","openOnClick","isHourSegment","Fragment","DatePickerField","DateRangeIcon","DateSegmentList","FormDatePicker","userTimezone","useUserTimezone","format","useDateFormatter","parseAbsolute","parsedValue","FileUploadIcon","DragHandleIcon","TrackUploadStatusText","fileUpload","status","bytesUploaded","totalBytes","prettyBytes","uploadedBytes","statusMessage","Endpoint","id","useUpdateTrack","updateChannel","useUpdateTrackForm","useForm","updateTrack","TrackUploadProgress","onAbort","UploadStatusButton","ProgressBar","statusButton","errMessage","AnimatedStatus","MixedText","ErrorIcon","WarningIcon","CheckCircleIcon","CloseIcon","useTrackUpload","upload","isUploading","meta","isProcessing","TrackFormUploadButton","setUploadId","setValue","watch","getValues","openFilePicker","newData","mergedValues","activeUpload","abortUpload","clearInactive","TrackForm","showExternalIdFields","showAlbumField","uploadButton","isMobile","useIsMobileMediaQuery","FormImageSelector","FormTextField","GENRE_MODEL","DurationField","SourceField","SpotifyIdField","spotify_is_setup","FormattedDuration","UpdateTrackDialog","hideAlbumField","formId","close","useDialogContext","DialogHeader","Form","musicImage","useCreateTrackForm","onTrackCreated","defaultValues","CreateTrackDialog","AlbumTracksForm","fields","remove","prepend","move","useFieldArray","index","f","tracks","newTrack","AddIcon","field","TrackItem","oldIndex","newIndex","IllustratedMessage","SvgImage","onRemove","onUpdate","onSort","previewRef","sortableProps","useSortable","updatedTrack","isConfirmed","ConfirmationDialog","RowDragPreview","content","DragPreview","AlbumForm","AlbumUploader","forwardRef","onUploadStart","onCancel","onCreate","userArtist","usePrimaryArtistForCurrentUser","isVisible","setIsVisible","uploadIsInProgress","useImperativeHandle","TracksUploader","setTracks","prev","allTracks","TrackUploadItem","createdTrack","t","newTracks","memo","useEffect","uploadProgress","albumBorderImage","UploadedMediaPreview","media","isAlbum","ALBUM_MODEL","absoluteLink","getAlbumLink","getTrackLink","AlbumImage","TrackImage","ArtistLinks","genre","parts","Link","LinkStyle","ShareMediaButtons","TextField","DropTargetMask","mask","resetMinutesLimitQuery","user","getBootstrapData","useUserMinutesLimit","useAuth","userId","fetchLimit","UploadPage","backstageLayout","FileUploadProvider","Content","uploadMode","setUploadMode","modeIsLocked","setModeIsLocked","uploaderRef","Uploader","createdItems","setCreatedItems","isDragOver","setIsDragOver","droppableProps","useDroppable","draggable","Wrapper","DefaultWrapper","UploadPanel","onUpload","onUploadModeChange","Switch","BackstageUploadPage","BackstageInsightsLayout","reportModel","title","isNested","dateRange","setDateRange","DateRangePresets","StaticPageTitle","ReportDateSelector","cloneElement","useInsightsReport","fetchReport","InfoIcon","TopModelsChartLayout","layoutProps","dataItems","ChartLayout","ChartLoadingIndicator","Image","Name","Description","PlayArrowFilledIcon","FormattedNumber","pathname","useLocation","link","SmallArtistImage","UserAvatar","ArtistLink","AlbumLink","TrackLink","UserProfileLink","InsightsReportCharts","AsyncChart","LineChart","PolarAreaChart","GeoChart","metric","isEnabled","setIsEnabled","chart","observerRef","contentRef","el","observer","BackstageInsightsTitle","image","BackstageArtistInsights","artistId","useArtist","NestedBackstageArtistInsights","BackstageAlbumInsights","albumId","useAlbum","NestedBackstageAlbumInsights","BackstageTrackInsights","useTrack","NestedBackstageTrackInsights","useStickySentinel","isSticky","setIsSticky","sentinelRef","sentinel","CrupdateResourceLayout","onSubmit","subTitle","actions","backButton","disableSaveWhenNotDirty","wrapInContainer","submitButtonText","variant","isDirty","saveButton","CrupdateResourceHeader","DirtyFormSaveDrawer","startActions","endActions","CrupdateResourceSection","margin","labelMargin","formState","reset","CreateTrackPage","navigate","useNavigate","BackstageCreateTrackPage","UpdateTrackPage","PageContent","PageStatus","canEdit","useTrackPermissions","Navigate","BackstageUpdateTrackPage","CreateAlbumPage","searchParams","useSearchParams","BackstageCreateAlbumPage","useUpdateAlbum","updateAlbum","UpdateAlbumPage","album","useAlbumPermissions","BackstageUpdateAlbumPage","useUpdateArtist","getArtistLink","Columns","FormattedDate","RowActions","ArtistAlbumsTable","albums","sortDescriptor","onSortChange","useSortableTableData","InfoDialogTriggerIcon","Table","deleteAlbum","useDeleteAlbum","CrupdateArtistForm","showExternalFields","FormSwitch","Tabs","TabList","Tab","TabPanels","TabPanel","DetailsPanel","ProfileLinksForm","BiographyPanel","ImagesPanel","append","UpdateArtistPage","useArtistPermissions","updateArtist","BackstageUpdateArtistPage","UpdateArtistPageWithExternalFields"],"mappings":"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"}